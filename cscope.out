cscope 15 /share/yc/yfs-class -q 0000000731 0000094236
	@gettime.cc

63 #ifde‡
__APPLE__


65 #¥agm®
wók
 
˛ock_gëtime


67 
	~<sys/time.h
>

68 
	~<sys/ªsour˚.h
>

69 
	~<mach/mach.h
>

70 
	~<mach/˛ock.h
>

71 
	~<mach/mach_time.h
>

72 
	~<î∫o.h
>

73 
	~<uni°d.h
>

74 
	~<sched.h
>

77 
	mCLOCK_REALTIME
,

78 
	mCLOCK_MONOTONIC
,

79 
	mCLOCK_PROCESS_CPUTIME_ID
,

80 
	mCLOCK_THREAD_CPUTIME_ID


81 } 
	t˛ockid_t
;

83 
mach_timeba£_öfo_d©a_t
 
	g__˛ock_gëtime_öf
;

85 
	$˛ock_gëtime
(
˛ockid_t
 
˛k_id
, 
time•ec
 *
ç
) {

86 
kîn_ªtu∫_t
 
ªt
;

87 
˛ock_£rv_t
 
˛k
;

88 
˛ock_id_t
 
˛k_£rv_id
;

89 
mach_time•ec_t
 
tm
;

91 
uöt64_t
 
°¨t
, 
íd
, 
dñè
, 
«no
;

93 
èsk_basic_öfo_d©a_t
 
töfo
;

94 
èsk_thªad_times_öfo_d©a_t
 
âöfo
;

95 
mach_msg_ty≥_numbî_t
 
tÊag
;

97 
ªtvÆ
 = -1;

98 
˛k_id
) {

99 
CLOCK_REALTIME
:

100 
CLOCK_MONOTONIC
:

101 
˛k_£rv_id
 = 
˛k_id
 =
CLOCK_REALTIME
 ? 
CALENDAR_CLOCK
 : 
SYSTEM_CLOCK
;

102 i‡(
KERN_SUCCESS
 =(
ªt
 = 
	`ho°_gë_˛ock_£rvi˚
(
	`mach_ho°_£lf
(), 
˛k_£rv_id
, &
˛k
))) {

103 i‡(
KERN_SUCCESS
 =(
ªt
 = 
	`˛ock_gë_time
(
˛k
, &
tm
))) {

104 
ç
->
tv_£c
 = 
tm
.tv_sec;

105 
ç
->
tv_n£c
 = 
tm
.tv_nsec;

106 
ªtvÆ
 = 0;

109 i‡(
KERN_SUCCESS
 !
ªt
) {

110 
î∫o
 = 
EINVAL
;

111 
ªtvÆ
 = -1;

114 
CLOCK_PROCESS_CPUTIME_ID
:

115 
CLOCK_THREAD_CPUTIME_ID
:

116 
°¨t
 = 
	`mach_absﬁuã_time
();

117 i‡(
˛k_id
 =
CLOCK_PROCESS_CPUTIME_ID
) {

118 
	`gëpid
();

120 
	`sched_yõld
();

122 
íd
 = 
	`mach_absﬁuã_time
();

123 
dñè
 = 
íd
 - 
°¨t
;

124 i‡(0 =
__˛ock_gëtime_öf
.
díom
) {

125 
	`mach_timeba£_öfo
(&
__˛ock_gëtime_öf
);

127 
«no
 = 
dñè
 * 
__˛ock_gëtime_öf
.
numî
 / __˛ock_gëtime_öf.
díom
;

128 
ç
->
tv_£c
 = 
«no
 * 1e-9;

129 
ç
->
tv_n£c
 = 
«no
 - (ç->
tv_£c
 * 1e9);

130 
ªtvÆ
 = 0;

133 
î∫o
 = 
EINVAL
;

134 
ªtvÆ
 = -1;

136  
ªtvÆ
;

137 
	}
}

	@gettime.h

1 #i‚de‡
gëtime_h


2 
	#gëtime_h


	)

4 #ifde‡
__APPLE__


6 
	mCLOCK_REALTIME
,

7 
	mCLOCK_MONOTONIC
,

8 
	mCLOCK_PROCESS_CPUTIME_ID
,

9 
	mCLOCK_THREAD_CPUTIME_ID


10 } 
	t˛ockid_t
;

12 
˛ock_gëtime
(
˛ockid_t
 
˛k_id
, 
time•ec
 *
ç
);

	@lang/algorithm.h

3 #i‚de‡
Æg‹ôhm_h


4 
	#Æg‹ôhm_h


	)

6 
	gãm∂©e
 <
	gA
, 
	gB
>

7 
	s°©ic_max


9 c⁄° 
	mvÆue
 = 
A
 > 
B
 ? A : B;

12 
	gãm∂©e
 <
	gA
, 
	gB
>

13 
	s°©ic_mö


15 c⁄° 
	mvÆue
 = 
A
 < 
B
 ? A : B;

	@lang/verify.h

3 #i‚de‡
vîify_˛õ¡_h


4 
	#vîify_˛õ¡_h


	)

6 
	~<°dlib.h
>

7 
	~<as£π.h
>

9 #ifde‡
NDEBUG


10 
	#VERIFY
(
ex¥
Ëdÿ{ i‡(!”x¥)Ë
	`ab‹t
(); } 0)

	)

12 
	#VERIFY
(
ex¥
Ë
	`as£π
”x¥)

	)

	@lock_client.cc

3 
	~"lock_˛õ¡.h
"

4 
	~"Ωc.h
"

5 
	~<¨∑/öë.h
>

7 
	~<s°ªam
>

8 
	~<io°ªam
>

9 
	~<°dio.h
>

11 
	glock_˛õ¡
::
lock_˛õ¡
(
°d
::
°rög
 
d°
)

13 
sockaddr_ö
 
d°sock
;

14 
make_sockaddr
(
d°
.
c_°r
(), &
d°sock
);

15 
	g˛
 = 
√w
 
Ωcc
(
d°sock
);

16 i‡(
	g˛
->
böd
() < 0) {

17 
¥ötf
("lock_client: call bind\n");

22 
	glock_˛õ¡
::
°©
(
lock_¥Ÿocﬁ
::
lockid_t
 
lid
)

24 
r
;

25 
	glock_¥Ÿocﬁ
::
°©us
 
ªt
 = 
˛
->
ˇŒ
(
lock_¥Ÿocﬁ
::
°©
, cl->
id
(), 
lid
, 
r
);

26 
VERIFY
 (
ªt
 =
lock_¥Ÿocﬁ
::
OK
);

27  
	gr
;

30 
	glock_¥Ÿocﬁ
::
°©us


31 
lock_˛õ¡
::
acquúe
(
lock_¥Ÿocﬁ
::
lockid_t
 
lid
)

35 
lock_¥Ÿocﬁ
::
°©us


36 
lock_˛õ¡
::
ªÀa£
(
lock_¥Ÿocﬁ
::
lockid_t
 
lid
)

	@lock_client.h

3 #i‚de‡
lock_˛õ¡_h


4 
	#lock_˛õ¡_h


	)

6 
	~<°rög
>

7 
	~"lock_¥Ÿocﬁ.h
"

8 
	~"Ωc.h
"

9 
	~<ve˘‹
>

12 ˛as†
	clock_˛õ¡
 {

13 
	m¥Ÿe˘ed
:

14 
Ωcc
 *
˛
;

15 
	mpublic
:

16 
lock_˛õ¡
(
°d
::
°rög
 
d
);

17 
	mvútuÆ
 ~
	$lock_˛õ¡
() {};

18 
vútuÆ
 
lock_¥Ÿocﬁ
::
°©us
 
	`acquúe
÷ock_¥Ÿocﬁ::
lockid_t
);

19 
vútuÆ
 
lock_¥Ÿocﬁ
::
°©us
 
	`ªÀa£
÷ock_¥Ÿocﬁ::
lockid_t
);

20 
vútuÆ
 
lock_¥Ÿocﬁ
::
°©us
 
	`°©
÷ock_¥Ÿocﬁ::
lockid_t
);

21 
	}
};

	@lock_demo.cc

5 
	~"lock_¥Ÿocﬁ.h
"

6 
	~"lock_˛õ¡.h
"

7 
	~"Ωc.h
"

8 
	~<¨∑/öë.h
>

9 
	~<ve˘‹
>

10 
	~<°dlib.h
>

11 
	~<°dio.h
>

13 
	g°d
::
°rög
 
d°
;

14 
lock_˛õ¡
 *
	glc
;

17 
	$maö
(
¨gc
, *
¨gv
[])

19 
r
;

21 if(
¨gc
 != 2){

22 
	`Ârötf
(
°dîr
, "Ußge: %†[ho°:]p‹t\n", 
¨gv
[0]);

23 
	`exô
(1);

26 
d°
 = 
¨gv
[1];

27 
lc
 = 
√w
 
	`lock_˛õ¡
(
d°
);

28 
r
 = 
lc
->
	`°©
(1);

29 
	`¥ötf
 ("°©Ñëu∫ed %d\n", 
r
);

30 
	}
}

	@lock_protocol.h

3 #i‚de‡
lock_¥Ÿocﬁ_h


4 
	#lock_¥Ÿocﬁ_h


	)

6 
	~"Ωc.h
"

8 ˛as†
	clock_¥Ÿocﬁ
 {

9 
	mpublic
:

10 
	exx°©us
 { 
OK
, 
	mRETRY
, 
	mRPCERR
, 
	mNOENT
, 
	mIOERR
 };

11 
	t°©us
;

12 
	tlockid_t
;

13 
	eΩc_numbîs
 {

14 
	gacquúe
 = 0x7001,

15 
	gªÀa£
,

16 
	g°©


	@lock_server.cc

3 
	~"lock_£rvî.h
"

4 
	~<s°ªam
>

5 
	~<°dio.h
>

6 
	~<uni°d.h
>

7 
	~<¨∑/öë.h
>

9 
	glock_£rvî
::
	$lock_£rvî
():

10 
	$«cquúe
 (0)

12 
	}
}

14 
lock_¥Ÿocﬁ
::
°©us


15 
lock_£rvî
::
°©
(
˛t
, 
lock_¥Ÿocﬁ
::
lockid_t
 
lid
, &
r
)

17 
	glock_¥Ÿocﬁ
::
°©us
 
ªt
 = 
lock_¥Ÿocﬁ
::
OK
;

18 
¥ötf
("°©Ñeque° from c… %d\n", 
˛t
);

19 
	gr
 = 
«cquúe
;

20  
	gªt
;

	@lock_server.h

4 #i‚de‡
lock_£rvî_h


5 
	#lock_£rvî_h


	)

7 
	~<°rög
>

8 
	~"lock_¥Ÿocﬁ.h
"

9 
	~"lock_˛õ¡.h
"

10 
	~"Ωc.h
"

12 ˛as†
	clock_£rvî
 {

14 
	m¥Ÿe˘ed
:

15 
«cquúe
;

17 
	mpublic
:

18 
lock_£rvî
();

19 ~
	$lock_£rvî
() {};

20 
lock_¥Ÿocﬁ
::
°©us
 
	`°©
(
˛t
,Üock_¥Ÿocﬁ::
lockid_t
 
lid
, &);

21 
	}
};

	@lock_smain.cc

1 
	~<sys/ty≥s.h
>

2 
	~<uni°d.h
>

3 
	~"Ωc.h
"

4 
	~<¨∑/öë.h
>

5 
	~<°dlib.h
>

6 
	~<°dio.h
>

7 
	~"lock_£rvî.h
"

9 
	~"j¶_log.h
"

14 
	$maö
(
¨gc
, *
¨gv
[])

16 
cou¡
 = 0;

18 
	`£tvbuf
(
°dout
, 
NULL
, 
_IONBF
, 0);

19 
	`£tvbuf
(
°dîr
, 
NULL
, 
_IONBF
, 0);

21 
	`§™dom
(
	`gëpid
());

23 if(
¨gc
 != 2){

24 
	`Ârötf
(
°dîr
, "Ußge: %†p‹t\n", 
¨gv
[0]);

25 
	`exô
(1);

28 *
cou¡_ív
 = 
	`gëív
("RPC_COUNT");

29 if(
cou¡_ív
 !
NULL
){

30 
cou¡
 = 
	`©oi
(
cou¡_ív
);

35 #i‚de‡
RSM


36 
lock_£rvî
 
ls
;

37 
Ωcs
 
	`£rvî
(
	`©oi
(
¨gv
[1]), 
cou¡
);

38 
£rvî
.
	`ªg
(
lock_¥Ÿocﬁ
::
°©
, &
ls
, &
lock_£rvî
::stat);

43 
	`¶ìp
(1000);

44 
	}
}

	@lock_tester.cc

4 
	~<sys/ty≥s.h
>

5 
	~<uni°d.h
>

6 
	~"lock_¥Ÿocﬁ.h
"

7 
	~"lock_˛õ¡.h
"

8 
	~"Ωc.h
"

9 
	~"j¶_log.h
"

10 
	~<¨∑/öë.h
>

11 
	~<ve˘‹
>

12 
	~<°dlib.h
>

13 
	~<°dio.h
>

14 
	~"œng/vîify.h
"

17 
	g¡
 = 6;

18 
	g°d
::
°rög
 
d°
;

19 
lock_˛õ¡
 **
	glc
 = 
√w
Üock_˛õ¡ * [
¡
];

20 
	glock_¥Ÿocﬁ
::
lockid_t
 
a
 = 1;

21 
	glock_¥Ÿocﬁ
::
lockid_t
 
b
 = 2;

22 
	glock_¥Ÿocﬁ
::
lockid_t
 
c
 = 3;

27 
	g˘
[256];

28 
±hªad_muãx_t
 
	gcou¡_muãx
;

31 
check_gø¡
(
lock_¥Ÿocﬁ
::
lockid_t
 
lid
)

33 
Sc›edLock
 
ml
(&
cou¡_muãx
);

34 
	gx
 = 
lid
 & 0xff;

35 if(
	g˘
[
x
] != 0){

36 
Ârötf
(
°dîr
, "îr‹: sîvî gø¡ed %016ŒxÅwi˚\n", 
lid
);

37 
Ârötf
(
°dout
, "îr‹: sîvî gø¡ed %016ŒxÅwi˚\n", 
lid
);

38 
exô
(1);

40 
	g˘
[
x
] += 1;

44 
check_ªÀa£
(
lock_¥Ÿocﬁ
::
lockid_t
 
lid
)

46 
Sc›edLock
 
ml
(&
cou¡_muãx
);

47 
	gx
 = 
lid
 & 0xff;

48 if(
	g˘
[
x
] != 1){

49 
Ârötf
(
°dîr
, "îr‹: clõ¡Ññó£d un-hñdÜock %016Œx\n", 
lid
);

50 
exô
(1);

52 
	g˘
[
x
] -= 1;

56 
	$ã°1
()

58 
	`¥ötf
 ("acquireáÑeleaseáácquireáÑeleaseá\n");

59 
lc
[0]->
	`acquúe
(
a
);

60 
	`check_gø¡
(
a
);

61 
lc
[0]->
	`ªÀa£
(
a
);

62 
	`check_ªÀa£
(
a
);

63 
lc
[0]->
	`acquúe
(
a
);

64 
	`check_gø¡
(
a
);

65 
lc
[0]->
	`ªÀa£
(
a
);

66 
	`check_ªÀa£
(
a
);

68 
	`¥ötf
 ("acquireáácquire bÑelease bÑeleaseá\n");

69 
lc
[0]->
	`acquúe
(
a
);

70 
	`check_gø¡
(
a
);

71 
lc
[0]->
	`acquúe
(
b
);

72 
	`check_gø¡
(
b
);

73 
lc
[0]->
	`ªÀa£
(
b
);

74 
	`check_ªÀa£
(
b
);

75 
lc
[0]->
	`ªÀa£
(
a
);

76 
	`check_ªÀa£
(
a
);

77 
	}
}

80 
	$ã°2
(*
x
)

82 
i
 = * (*Ë
x
;

84 
	`¥ötf
 ("ã°2: clõ¡ %dácquúê®ªÀa£á\n", 
i
);

85 
lc
[
i
]->
	`acquúe
(
a
);

86 
	`¥ötf
 ("ã°2: clõ¡ %dácquúêd⁄e\n", 
i
);

87 
	`check_gø¡
(
a
);

88 
	`¶ìp
(1);

89 
	`¥ötf
 ("ã°2: clõ¡ %dÑñó£\n", 
i
);

90 
	`check_ªÀa£
(
a
);

91 
lc
[
i
]->
	`ªÀa£
(
a
);

92 
	`¥ötf
 ("ã°2: clõ¡ %dÑñó£ d⁄e\n", 
i
);

94 
	}
}

97 
	$ã°3
(*
x
)

99 
i
 = * (*Ë
x
;

101 
	`¥ötf
 ("ã°3: clõ¡ %dácquúê®ªÀa£á c⁄cuºít\n", 
i
);

102 
j
 = 0; j < 10; j++) {

103 
lc
[
i
]->
	`acquúe
(
a
);

104 
	`check_gø¡
(
a
);

105 
	`¥ötf
 ("ã°3: clõ¡ %d gŸÜock\n", 
i
);

106 
	`check_ªÀa£
(
a
);

107 
lc
[
i
]->
	`ªÀa£
(
a
);

110 
	}
}

113 
	$ã°4
(*
x
)

115 
i
 = * (*Ë
x
;

117 
	`¥ötf
 ("ã°4:Åhªad %dácquúê®ªÀa£á c⁄cuºít; samê˛¡\n", 
i
);

118 
j
 = 0; j < 10; j++) {

119 
lc
[0]->
	`acquúe
(
a
);

120 
	`check_gø¡
(
a
);

121 
	`¥ötf
 ("ã°4:Åhªad %d o¿˛õ¡ 0 gŸÜock\n", 
i
);

122 
	`check_ªÀa£
(
a
);

123 
lc
[0]->
	`ªÀa£
(
a
);

126 
	}
}

129 
	$ã°5
(*
x
)

131 
i
 = * (*Ë
x
;

133 
	`¥ötf
 ("ã°5: clõ¡ %dácquúê®ªÀa£á c⁄cuºít; samê™d dif‡˛¡\n", 
i
);

134 
j
 = 0; j < 10; j++) {

135 i‡(
i
 < 5Ë
lc
[0]->
	`acquúe
(
a
);

136 
lc
[1]->
	`acquúe
(
a
);

137 
	`check_gø¡
(
a
);

138 
	`¥ötf
 ("ã°5: clõ¡ %d gŸÜock\n", 
i
);

139 
	`check_ªÀa£
(
a
);

140 i‡(
i
 < 5Ë
lc
[0]->
	`ªÀa£
(
a
);

141 
lc
[1]->
	`ªÀa£
(
a
);

144 
	}
}

147 
	$maö
(
¨gc
, *
¨gv
[])

149 
r
;

150 
±hªad_t
 
th
[
¡
];

151 
ã°
 = 0;

153 
	`£tvbuf
(
°dout
, 
NULL
, 
_IONBF
, 0);

154 
	`£tvbuf
(
°dîr
, 
NULL
, 
_IONBF
, 0);

155 
	`§™dom
(
	`gëpid
());

159 if(
¨gc
 < 2) {

160 
	`Ârötf
(
°dîr
, "Ußge: %†[ho°:]p‹à[ã°]\n", 
¨gv
[0]);

161 
	`exô
(1);

164 
d°
 = 
¨gv
[1];

166 i‡(
¨gc
 > 2) {

167 
ã°
 = 
	`©oi
(
¨gv
[2]);

168 if(
ã°
 < 1 ||Åest > 5){

169 
	`¥ötf
("TestÇumber must be between 1ánd 5\n");

170 
	`exô
(1);

174 
	`VERIFY
(
	`±hªad_muãx_öô
(&
cou¡_muãx
, 
NULL
) == 0);

175 
	`¥ötf
("simpleÜock client\n");

176 
i
 = 0; i < 
¡
; i++Ë
lc
[i] = 
√w
 
	`lock_˛õ¡
(
d°
);

178 if(!
ã°
 ||Åest == 1){

179 
	`ã°1
();

182 if(!
ã°
 ||Åest == 2){

184 
i
 = 0; i < 
¡
; i++) {

185 *
a
 = 
√w
 (
i
);

186 
r
 = 
	`±hªad_¸óã
(&
th
[
i
], 
NULL
, 
ã°2
, (*Ë
a
);

187 
	`VERIFY
 (
r
 == 0);

189 
i
 = 0; i < 
¡
; i++) {

190 
	`±hªad_joö
(
th
[
i
], 
NULL
);

194 if(!
ã°
 ||Åest == 3){

195 
	`¥ötf
("test 3\n");

198 
i
 = 0; i < 
¡
; i++) {

199 *
a
 = 
√w
 (
i
);

200 
r
 = 
	`±hªad_¸óã
(&
th
[
i
], 
NULL
, 
ã°3
, (*Ë
a
);

201 
	`VERIFY
 (
r
 == 0);

203 
i
 = 0; i < 
¡
; i++) {

204 
	`±hªad_joö
(
th
[
i
], 
NULL
);

208 if(!
ã°
 ||Åest == 4){

209 
	`¥ötf
("test 4\n");

212 
i
 = 0; i < 2; i++) {

213 *
a
 = 
√w
 (
i
);

214 
r
 = 
	`±hªad_¸óã
(&
th
[
i
], 
NULL
, 
ã°4
, (*Ë
a
);

215 
	`VERIFY
 (
r
 == 0);

217 
i
 = 0; i < 2; i++) {

218 
	`±hªad_joö
(
th
[
i
], 
NULL
);

222 if(!
ã°
 ||Åest == 5){

223 
	`¥ötf
("test 5\n");

227 
i
 = 0; i < 
¡
; i++) {

228 *
a
 = 
√w
 (
i
);

229 
r
 = 
	`±hªad_¸óã
(&
th
[
i
], 
NULL
, 
ã°5
, (*Ë
a
);

230 
	`VERIFY
 (
r
 == 0);

232 
i
 = 0; i < 
¡
; i++) {

233 
	`±hªad_joö
(
th
[
i
], 
NULL
);

237 
	`¥ötf
 ("%s:Öas£dáŒÅe°†suc˚ssfuŒy\n", 
¨gv
[0]);

239 
	}
}

	@rpc/connection.cc

1 
	~<f˙é.h
>

2 
	~<sys/ty≥s.h
>

3 
	~<sys/time.h
>

4 
	~<√töë/t˝.h
>

5 
	~<î∫o.h
>

6 
	~<sig«l.h
>

7 
	~<uni°d.h
>

9 
	~"mëhod_thªad.h
"

10 
	~"c⁄√˘i⁄.h
"

11 
	~"¶ock.h
"

12 
	~"pﬁlmgr.h
"

13 
	~"j¶_log.h
"

14 
	~"gëtime.h
"

15 
	~"œng/vîify.h
"

17 
	#MAX_PDU
 (10<<20)

18 

	)

20 
	gc⁄√˘i⁄
::
	$c⁄√˘i⁄
(
ch™mgr
 *
m1
, 
f1
, 
l1
)

21 : 
	`mgr_
(
m1
), 
	`fd_
(
f1
), 
	`dód_
(
Ál£
),
	`waôîs_
(0), 
	`ª‚o_
(1),
	$lossy_
(
l1
)

24 
Êags
 = 
	`f˙é
(
fd_
, 
F_GETFL
, 
NULL
);

25 
Êags
 |
O_NONBLOCK
;

26 
	`f˙é
(
fd_
, 
F_SETFL
, 
Êags
);

28 
	`sig«l
(
SIGPIPE
, 
SIG_IGN
);

29 
	`VERIFY
(
	`±hªad_muãx_öô
(&
m_
,0)==0);

30 
	`VERIFY
(
	`±hªad_muãx_öô
(&
ªf_m_
,0)==0);

31 
	`VERIFY
(
	`±hªad_c⁄d_öô
(&
£nd_waô_
,0)==0);

32 
	`VERIFY
(
	`±hªad_c⁄d_öô
(&
£nd_com∂ëe_
,0)==0);

34 
	`VERIFY
(
	`gëtimeofday
(&
¸óã_time_
, 
NULL
) == 0);

36 
PﬁlMgr
::
	`In°™˚
()->
	`add_ˇŒback
(
fd_
, 
CB_RDONLY
, 
this
);

37 
	}
}

39 
	gc⁄√˘i⁄
::~
	$c⁄√˘i⁄
()

41 
	`VERIFY
(
dód_
);

42 
	`VERIFY
(
	`±hªad_muãx_de°roy
(&
m_
)== 0);

43 
	`VERIFY
(
	`±hªad_muãx_de°roy
(&
ªf_m_
)== 0);

44 
	`VERIFY
(
	`±hªad_c⁄d_de°roy
(&
£nd_waô_
) == 0);

45 
	`VERIFY
(
	`±hªad_c⁄d_de°roy
(&
£nd_com∂ëe_
) == 0);

46 i‡(
Ωdu_
.
buf
)

47 
	`‰ì
(
Ωdu_
.
buf
);

48 
	`VERIFY
(!
wpdu_
.
buf
);

49 
	`˛o£
(
fd_
);

50 
	}
}

53 
	gc⁄√˘i⁄
::
	$ö¸ef
()

55 
Sc›edLock
 
	`ml
(&
ªf_m_
);

56 
ª‚o_
++;

57 
	}
}

59 
boﬁ


60 
	gc⁄√˘i⁄
::
	$isdód
()

62 
Sc›edLock
 
	`ml
(&
m_
);

63  
dód_
;

64 
	}
}

67 
	gc⁄√˘i⁄
::
	$˛o£c⁄n
()

70 
Sc›edLock
 
	`ml
(&
m_
);

71 i‡(!
dód_
) {

72 
dód_
 = 
åue
;

73 
	`shutdown
(
fd_
,
SHUT_RDWR
);

80 
PﬁlMgr
::
	`In°™˚
()->
	`block_ªmove_fd
(
fd_
);

81 
	}
}

84 
	gc⁄√˘i⁄
::
	$de¸ef
()

86 
	`VERIFY
(
	`±hªad_muãx_lock
(&
ªf_m_
)==0);

87 
ª‚o_
 --;

88 
	`VERIFY
(
ª‚o_
>=0);

89 i‡(
ª‚o_
==0) {

90 
	`VERIFY
(
	`±hªad_muãx_lock
(&
m_
)==0);

91 i‡(
dód_
) {

92 
	`VERIFY
(
	`±hªad_muãx_u∆ock
(&
ªf_m_
)==0);

93 
	`VERIFY
(
	`±hªad_muãx_u∆ock
(&
m_
)==0);

94 
dñëe
 
this
;

97 
	`VERIFY
(
	`±hªad_muãx_u∆ock
(&
m_
)==0);

99 
	`±hªad_muãx_u∆ock
(&
ªf_m_
);

100 
	}
}

103 
	gc⁄√˘i⁄
::
	$ªf
()

105 
Sc›edLock
 
	`æ
(&
ªf_m_
);

106  
ª‚o_
;

107 
	}
}

110 
	gc⁄√˘i⁄
::
	$com∑ª
(
c⁄√˘i⁄
 *
™Ÿhî
)

112 i‡(
¸óã_time_
.
tv_£c
 > 
™Ÿhî
->create_time_.tv_sec)

114 i‡(
¸óã_time_
.
tv_£c
 < 
™Ÿhî
->create_time_.tv_sec)

116 i‡(
¸óã_time_
.
tv_u£c
 > 
™Ÿhî
->create_time_.tv_usec)

118 i‡(
¸óã_time_
.
tv_u£c
 < 
™Ÿhî
->create_time_.tv_usec)

121 
	}
}

123 
boﬁ


124 
	gc⁄√˘i⁄
::
	$£nd
(*
b
, 
sz
)

126 
Sc›edLock
 
	`ml
(&
m_
);

127 
waôîs_
++;

128 !
dód_
 && 
wpdu_
.
buf
) {

129 
	`VERIFY
(
	`±hªad_c⁄d_waô
(&
£nd_waô_
, &
m_
)==0);

131 
waôîs_
--;

132 i‡(
dód_
) {

133  
Ál£
;

135 
wpdu_
.
buf
 = 
b
;

136 
wpdu_
.
sz
 = sz;

137 
wpdu_
.
sﬁ⁄g
 = 0;

139 i‡(
lossy_
) {

140 i‡((
	`øndom
()%100Ë< 
lossy_
) {

141 
	`j¶_log
(
JSL_DBG_1
, "c⁄√˘i⁄::£nd LOSSY TEST shutdow¿fd_ %d\n", 
fd_
);

142 
	`shutdown
(
fd_
,
SHUT_RDWR
);

146 i‡(!
	`wrôïdu
()) {

147 
dód_
 = 
åue
;

148 
	`VERIFY
(
	`±hªad_muãx_u∆ock
(&
m_
) == 0);

149 
PﬁlMgr
::
	`In°™˚
()->
	`block_ªmove_fd
(
fd_
);

150 
	`VERIFY
(
	`±hªad_muãx_lock
(&
m_
) == 0);

152 i‡(
wpdu_
.
sﬁ⁄g
 =wpdu_.
sz
) {

155 
PﬁlMgr
::
	`In°™˚
()->
	`add_ˇŒback
(
fd_
, 
CB_WRONLY
, 
this
);

156 !
dód_
 && 
wpdu_
.
sﬁ⁄g
 >0 && wpdu_.sﬁ⁄g < wpdu_.
sz
) {

157 
	`VERIFY
(
	`±hªad_c⁄d_waô
(&
£nd_com∂ëe_
,&
m_
) == 0);

161 
boﬁ
 
ªt
 = (!
dód_
 && 
wpdu_
.
sﬁ⁄g
 =wpdu_.
sz
);

162 
wpdu_
.
sﬁ⁄g
 = wpdu_.
sz
 = 0;

163 
wpdu_
.
buf
 = 
NULL
;

164 i‡(
waôîs_
 > 0)

165 
	`±hªad_c⁄d_brﬂdˇ°
(&
£nd_waô_
);

166  
ªt
;

167 
	}
}

171 
	gc⁄√˘i⁄
::
	$wrôe_cb
(
s
)

173 
Sc›edLock
 
	`ml
(&
m_
);

174 
	`VERIFY
(!
dód_
);

175 
	`VERIFY
(
fd_
 =
s
);

176 i‡(
wpdu_
.
sz
 == 0) {

177 
PﬁlMgr
::
	`In°™˚
()->
	`dñ_ˇŒback
(
fd_
,
CB_WRONLY
);

180 i‡(!
	`wrôïdu
()) {

181 
PﬁlMgr
::
	`In°™˚
()->
	`dñ_ˇŒback
(
fd_
, 
CB_RDWR
);

182 
dód_
 = 
åue
;

184 
	`VERIFY
(
wpdu_
.
sﬁ⁄g
 >= 0);

185 i‡(
wpdu_
.
sﬁ⁄g
 < wpdu_.
sz
) {

189 
	`±hªad_c⁄d_sig«l
(&
£nd_com∂ëe_
);

190 
	}
}

194 
	gc⁄√˘i⁄
::
	$ªad_cb
(
s
)

196 
Sc›edLock
 
	`ml
(&
m_
);

197 
	`VERIFY
(
fd_
 =
s
);

198 i‡(
dód_
) {

202 
boﬁ
 
succ
 = 
åue
;

203 i‡(!
Ωdu_
.
buf
 ||Ñpdu_.
sﬁ⁄g
 <Ñpdu_.
sz
) {

204 
succ
 = 
	`ªadpdu
();

207 i‡(!
succ
) {

208 
PﬁlMgr
::
	`In°™˚
()->
	`dñ_ˇŒback
(
fd_
,
CB_RDWR
);

209 
dód_
 = 
åue
;

210 
	`±hªad_c⁄d_sig«l
(&
£nd_com∂ëe_
);

213 i‡(
Ωdu_
.
buf
 &&Ñpdu_.
sz
 =Ωdu_.
sﬁ⁄g
) {

214 i‡(
mgr_
->
	`gŸ_pdu
(
this
, 
Ωdu_
.
buf
,Ñpdu_.
sz
)) {

216 
Ωdu_
.
buf
 = 
NULL
;

217 
Ωdu_
.
sz
 =Ñpdu_.
sﬁ⁄g
 = 0;

220 
	}
}

222 
boﬁ


223 
	gc⁄√˘i⁄
::
	$wrôïdu
()

225 
	`VERIFY
(
wpdu_
.
sﬁ⁄g
 >= 0);

226 i‡(
wpdu_
.
sﬁ⁄g
 =wpdu_.
sz
)

227  
åue
;

229 i‡(
wpdu_
.
sﬁ⁄g
 == 0) {

230 
sz
 = 
	`ht⁄l
(
wpdu_
.sz);

231 
	`bc›y
(&
sz
,
wpdu_
.
buf
,(sz));

233 
n
 = 
	`wrôe
(
fd_
, 
wpdu_
.
buf
 + wpdu_.
sﬁ⁄g
, (wpdu_.
sz
-wpdu_.solong));

234 i‡(
n
 < 0) {

235 i‡(
î∫o
 !
EAGAIN
) {

236 
	`j¶_log
(
JSL_DBG_1
, "c⁄√˘i⁄::wrôïdu fd_ %d faûuªÉºno=%d\n", 
fd_
, 
î∫o
);

237 
wpdu_
.
sﬁ⁄g
 = -1;

238 
wpdu_
.
sz
 = 0;

240  (
î∫o
 =
EAGAIN
);

242 
wpdu_
.
sﬁ⁄g
 +
n
;

243  
åue
;

244 
	}
}

246 
boﬁ


247 
	gc⁄√˘i⁄
::
	$ªadpdu
()

249 i‡(!
Ωdu_
.
sz
) {

250 
sz
, 
sz1
;

251 
n
 = 
	`ªad
(
fd_
, &
sz1
, (sz1));

253 i‡(
n
 == 0) {

254  
Ál£
;

257 i‡(
n
 < 0) {

258 
	`VERIFY
(
î∫o
!=
EAGAIN
);

259  
Ál£
;

262 i‡(
n
 >0 &&Ç!(
sz
)) {

263 
	`j¶_log
(
JSL_DBG_OFF
, "connection::readpdu shortÑead of sz\n");

264  
Ál£
;

267 
sz
 = 
	`¡ohl
(
sz1
);

269 i‡(
sz
 > 
MAX_PDU
) {

270 *
tmpb
 = (*)&
sz1
;

271 
	`j¶_log
(
JSL_DBG_2
, "c⁄√˘i⁄::ªadpduÑódÖdu TOO BIG %dÇëw‹k ordî=%x %x %x %x %x\n", 
sz
,

272 
sz1
, 
tmpb
[0],tmpb[1],tmpb[2],tmpb[3]);

273  
Ál£
;

276 
Ωdu_
.
sz
 = sz;

277 
	`VERIFY
(
Ωdu_
.
buf
 =
NULL
);

278 
Ωdu_
.
buf
 = (*)
	`mÆloc
(
sz
+(sz));

279 
	`VERIFY
(
Ωdu_
.
buf
);

280 
	`bc›y
(&
sz1
,
Ωdu_
.
buf
,(
sz
));

281 
Ωdu_
.
sﬁ⁄g
 = (
sz
);

284 
n
 = 
	`ªad
(
fd_
, 
Ωdu_
.
buf
 +Ñpdu_.
sﬁ⁄g
,Ñpdu_.
sz
 -Ñpdu_.solong);

285 i‡(
n
 <= 0) {

286 i‡(
î∫o
 =
EAGAIN
)

287  
åue
;

288 i‡(
Ωdu_
.
buf
)

289 
	`‰ì
(
Ωdu_
.
buf
);

290 
Ωdu_
.
buf
 = 
NULL
;

291 
Ωdu_
.
sz
 =Ñpdu_.
sﬁ⁄g
 = 0;

292  (
î∫o
 =
EAGAIN
);

294 
Ωdu_
.
sﬁ⁄g
 +
n
;

295  
åue
;

296 
	}
}

298 
	gt˝sc⁄n
::
	$t˝sc⁄n
(
ch™mgr
 *
m1
, 
p‹t
, 
lossyã°
)

299 : 
	`mgr_
(
m1
), 
	$lossy_
(
lossyã°
)

302 
	`VERIFY
(
	`±hªad_muãx_öô
(&
m_
,
NULL
) == 0);

304 
sockaddr_ö
 
sö
;

305 
	`mem£t
(&
sö
, 0, (sin));

306 
sö
.
sö_Ámûy
 = 
AF_INET
;

307 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

309 
t˝_
 = 
	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

310 if(
t˝_
 < 0){

311 
	`≥º‹
("tcpsconn::tcpsconnáccept_loop socket:");

312 
	`VERIFY
(0);

315 
yes
 = 1;

316 
	`£tsock›t
(
t˝_
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
yes
, (yes));

317 
	`£tsock›t
(
t˝_
, 
IPPROTO_TCP
, 
TCP_NODELAY
, &
yes
, (yes));

319 if(
	`böd
(
t˝_
, (
sockaddr
 *)&
sö
, (sin)) < 0){

320 
	`≥º‹
("accept_loopÅcp bind:");

321 
	`VERIFY
(0);

324 if(
	`li°í
(
t˝_
, 1000) < 0) {

325 
	`≥º‹
("tcpsconn::tcpsconnÜisten:");

326 
	`VERIFY
(0);

329 
	`j¶_log
(
JSL_DBG_2
, "t˝sc⁄n::t˝sc⁄¿li°í o¿%d %d\n", 
p‹t
,

330 
sö
.
sö_p‹t
);

332 i‡(
	`pùe
(
pùe_
) < 0) {

333 
	`≥º‹
("accept_loopÖipe:");

334 
	`VERIFY
(0);

337 
Êags
 = 
	`f˙é
(
pùe_
[0], 
F_GETFL
, 
NULL
);

338 
Êags
 |
O_NONBLOCK
;

339 
	`f˙é
(
pùe_
[0], 
F_SETFL
, 
Êags
);

341 
	`VERIFY
((
th_
 = 
	`mëhod_thªad
(
this
, 
Ál£
, &
t˝sc⁄n
::
ac˚±_c⁄n
)) != 0);

342 
	}
}

344 
	gt˝sc⁄n
::~
	$t˝sc⁄n
()

346 
	`VERIFY
(
	`˛o£
(
pùe_
[1]) == 0);

347 
	`VERIFY
(
	`±hªad_joö
(
th_
, 
NULL
) == 0);

350 
°d
::
m≠
<, 
c⁄√˘i⁄
 *>::
ôî©‹
 
i
;

351 
i
 = 
c⁄ns_
.
	`begö
(); i !c⁄ns_.
	`íd
(); i++) {

352 
i
->
£c⁄d
->
	`˛o£c⁄n
();

353 
i
->
£c⁄d
->
	`de¸ef
();

355 
	}
}

358 
	gt˝sc⁄n
::
	$¥o˚ss_ac˚±
()

360 
sockaddr_ö
 
sö
;

361 
sockÀn_t
 
¶í
 = (
sö
);

362 
s1
 = 
	`ac˚±
(
t˝_
, (
sockaddr
 *)&
sö
, &
¶í
);

363 i‡(
s1
 < 0) {

364 
	`≥º‹
("tcpsconn::accept_connÉrror");

365 
	`±hªad_exô
(
NULL
);

368 
	`j¶_log
(
JSL_DBG_2
, "accept_loop got connection fd=%d %s:%d\n",

369 
s1
, 
	`öë_¡ﬂ
(
sö
.
sö_addr
), 
	`¡ohs
(sö.
sö_p‹t
));

370 
c⁄√˘i⁄
 *
ch
 = 
√w
 
	`c⁄√˘i⁄
(
mgr_
, 
s1
, 
lossy_
);

373 
°d
::
m≠
<, 
c⁄√˘i⁄
 *>::
ôî©‹
 
i
;

374 
i
 = 
c⁄ns_
.
	`begö
(); i !c⁄ns_.
	`íd
();) {

375 i‡(
i
->
£c⁄d
->
	`isdód
(Ë&& i->£c⁄d->
	`ªf
() == 1) {

376 
	`j¶_log
(
JSL_DBG_2
, "accept_loop garbage collected fd=%d\n",

377 
i
->
£c⁄d
->
	`ch™no
());

378 
i
->
£c⁄d
->
	`de¸ef
();

383 
c⁄ns_
.
	`îa£
(
i
++);

385 ++
i
;

388 
c⁄ns_
[
ch
->
	`ch™no
()] = ch;

389 
	}
}

392 
	gt˝sc⁄n
::
	$ac˚±_c⁄n
()

394 
fd_£t
 
rfds
;

395 
max_fd
 = 
pùe_
[0] > 
t˝_
 ?Öipe_[0] :Åcp_;

398 
	`FD_ZERO
(&
rfds
);

399 
	`FD_SET
(
pùe_
[0], &
rfds
);

400 
	`FD_SET
(
t˝_
, &
rfds
);

402 
ªt
 = 
	`£À˘
(
max_fd
+1, &
rfds
, 
NULL
, NULL, NULL);

404 i‡(
ªt
 < 0) {

405 i‡(
î∫o
 =
EINTR
) {

408 
	`≥º‹
("accept_conn select:");

409 
	`j¶_log
(
JSL_DBG_OFF
, "t˝sc⁄n::ac˚±_c⁄¿ÁûuªÉºnÿ%d\n",
î∫o
);

410 
	`VERIFY
(0);

414 i‡(
	`FD_ISSET
(
pùe_
[0], &
rfds
)) {

415 
	`˛o£
(
pùe_
[0]);

416 
	`˛o£
(
t˝_
);

419 i‡(
	`FD_ISSET
(
t˝_
, &
rfds
)) {

420 
	`¥o˚ss_ac˚±
();

422 
	`VERIFY
(0);

425 
	}
}

427 
c⁄√˘i⁄
 *

428 
	$c⁄√˘_to_d°
(c⁄° 
sockaddr_ö
 &
d°
, 
ch™mgr
 *
mgr
, 
lossy
)

430 
s

	`sockë
(
AF_INET
, 
SOCK_STREAM
, 0);

431 
yes
 = 1;

432 
	`£tsock›t
(
s
, 
IPPROTO_TCP
, 
TCP_NODELAY
, &
yes
, (yes));

433 if(
	`c⁄√˘
(
s
, (
sockaddr
*)&
d°
, (dst)) < 0) {

434 
	`j¶_log
(
JSL_DBG_1
, "rpcc::connect_to_dst failedÅo %s:%d\n",

435 
	`öë_¡ﬂ
(
d°
.
sö_addr
), ()
	`¡ohs
(d°.
sö_p‹t
));

436 
	`˛o£
(
s
);

437  
NULL
;

439 
	`j¶_log
(
JSL_DBG_2
, "connect_to_dst fd=%dÅo dst %s:%d\n",

440 
s
, 
	`öë_¡ﬂ
(
d°
.
sö_addr
), ()
	`¡ohs
(d°.
sö_p‹t
));

441  
√w
 
	`c⁄√˘i⁄
(
mgr
, 
s
, 
lossy
);

442 
	}
}

	@rpc/connection.h

1 #i‚de‡
c⁄√˘i⁄_h


2 
	#c⁄√˘i⁄_h
 1

	)

4 
	~<sys/ty≥s.h
>

5 
	~<sys/sockë.h
>

6 
	~<¨∑/öë.h
>

7 
	~<√töë/ö.h
>

8 
	~<c°ddef
>

10 
	~<m≠
>

12 
	~"pﬁlmgr.h
"

14 
˛ass
 
	gc⁄√˘i⁄
;

16 ˛as†
	cch™mgr
 {

17 
	mpublic
:

18 
vútuÆ
 
boﬁ
 
gŸ_pdu
(
c⁄√˘i⁄
 *
c
, *
b
, 
sz
) = 0;

19 
	mvútuÆ
 ~
	$ch™mgr
() {}

20 
	}
};

22 ˛as†
	cc⁄√˘i⁄
 : 
public
 
aio_ˇŒback
 {

23 
public
:

24 
	sch¨buf
 {

25 
ch¨buf
(): 
buf
(
NULL
), 
sz
(0), 
sﬁ⁄g
(0) {}

26 
ch¨buf
 (*
b
, 
s
Ë: 
buf
(b), 
sz
(s), 
sﬁ⁄g
(0){}

27 *
	mbuf
;

28 
	msz
;

29 
	msﬁ⁄g
;

32 
c⁄√˘i⁄
(
ch™mgr
 *
m1
, 
f1
, 
lossyã°
=0);

33 ~
c⁄√˘i⁄
();

35 
	$ch™no
(Ë{  
fd_
; 
	}
}

36 
boﬁ
 
isdód
();

37 
˛o£c⁄n
();

39 
boﬁ
 
£nd
(*
b
, 
sz
);

40 
wrôe_cb
(
s
);

41 
ªad_cb
(
s
);

43 
ö¸ef
();

44 
de¸ef
();

45 
ªf
();

47 
com∑ª
(
c⁄√˘i⁄
 *
™Ÿhî
);

48 
	g¥iv©e
:

50 
boﬁ
 
ªadpdu
();

51 
boﬁ
 
wrôïdu
();

53 
ch™mgr
 *
	gmgr_
;

54 c⁄° 
	gfd_
;

55 
boﬁ
 
	gdód_
;

57 
ch¨buf
 
	gwpdu_
;

58 
ch¨buf
 
	gΩdu_
;

60 
timevÆ
 
	g¸óã_time_
;

62 
	gwaôîs_
;

63 
	gª‚o_
;

64 c⁄° 
	glossy_
;

66 
±hªad_muãx_t
 
	gm_
;

67 
±hªad_muãx_t
 
	gªf_m_
;

68 
±hªad_c⁄d_t
 
	g£nd_com∂ëe_
;

69 
±hªad_c⁄d_t
 
	g£nd_waô_
;

72 ˛as†
	ct˝sc⁄n
 {

73 
	mpublic
:

74 
t˝sc⁄n
(
ch™mgr
 *
m1
, 
p‹t
, 
lossyã°
=0);

75 ~
t˝sc⁄n
();

77 
ac˚±_c⁄n
();

78 
	m¥iv©e
:

80 
±hªad_muãx_t
 
m_
;

81 
±hªad_t
 
	mth_
;

82 
	mpùe_
[2];

84 
	mt˝_
;

85 
ch™mgr
 *
	mmgr_
;

86 
	mlossy_
;

87 
	m°d
::
m≠
<, 
	mc⁄√˘i⁄
 *> 
	mc⁄ns_
;

89 
¥o˚ss_ac˚±
();

92 
	sbundÀ
 {

93 
bundÀ
(
ch™mgr
 *
m
, 
s
, 
l
):
mgr
(m),
t˝
(s),
lossy
(l) {}

94 
ch™mgr
 *
	mmgr
;

95 
	mt˝
;

96 
	mlossy
;

99 
°¨t_ac˚±_thªad
(
ch™mgr
 *
mgr
, 
p‹t
, 
±hªad_t
 *
th
, *
fd
 = 
NULL
, 
lossy
=0);

100 
c⁄√˘i⁄
 *
c⁄√˘_to_d°
(c⁄° 
sockaddr_ö
 &
d°
, 
ch™mgr
 *
mgr
, 
lossy
=0);

	@rpc/fifo.h

1 #i‚de‡
fifo_h


2 
	#fifo_h


	)

7 
	~<î∫o.h
>

8 
	~<li°
>

9 
	~<sys/time.h
>

10 
	~<time.h
>

11 
	~<î∫o.h
>

12 
	~"¶ock.h
"

13 
	~"œng/vîify.h
"

15 
	gãm∂©e
<
˛ass
 
	gT
>

16 ˛as†
	cfifo
 {

17 
	mpublic
:

18 
fifo
(
m
=0);

19 ~
fifo
();

20 
boﬁ
 
íq
(
T
, boﬁ 
blockög
=
åue
);

21 
deq
(
T
 *);

22 
boﬁ
 
size
();

24 
	m¥iv©e
:

25 
°d
::
li°
<
T
> 
q_
;

26 
±hªad_muãx_t
 
	mm_
;

27 
±hªad_c⁄d_t
 
	mn⁄_em±y_c_
;

28 
±hªad_c⁄d_t
 
	mhas_•a˚_c_
;

29 
	mmax_
;

32 
	gãm∂©e
<
˛ass
 
	gT
>

33 
	gfifo
<
	gT
>::
	$fifo
(
limô
Ë: 
	$max_
(
limô
)

35 
	`VERIFY
(
	`±hªad_muãx_öô
(&
m_
, 0) == 0);

36 
	`VERIFY
(
	`±hªad_c⁄d_öô
(&
n⁄_em±y_c_
, 0) == 0);

37 
	`VERIFY
(
	`±hªad_c⁄d_öô
(&
has_•a˚_c_
, 0) == 0);

38 
	}
}

40 
	gãm∂©e
<
˛ass
 
	gT
>

41 
	gfifo
<
	gT
>::~
	$fifo
()

44 
	`VERIFY
(
	`±hªad_muãx_de°roy
(&
m_
)==0);

45 
	`VERIFY
(
	`±hªad_c⁄d_de°roy
(&
n⁄_em±y_c_
) == 0);

46 
	`VERIFY
(
	`±hªad_c⁄d_de°roy
(&
has_•a˚_c_
) == 0);

47 
	}
}

49 
	gãm∂©e
<
˛ass
 
	gT
> 
boﬁ


50 
	gfifo
<
	gT
>::
	$size
()

52 
Sc›edLock
 
	`ml
(&
m_
);

53  
q_
.
	`size
();

54 
	}
}

56 
	gãm∂©e
<
˛ass
 
	gT
> 
boﬁ


57 
	gfifo
<
	gT
>::
	$íq
(
T
 
e
, 
boﬁ
 
blockög
)

59 
Sc›edLock
 
	`ml
(&
m_
);

61 i‡(!
max_
 || 
q_
.
	`size
() < max_) {

62 
q_
.
	`push_back
(
e
);

65 i‡(
blockög
)

66 
	`VERIFY
(
	`±hªad_c⁄d_waô
(&
has_•a˚_c_
, &
m_
) == 0);

68  
Ál£
;

70 
	`VERIFY
(
	`±hªad_c⁄d_sig«l
(&
n⁄_em±y_c_
) == 0);

71  
åue
;

72 
	}
}

74 
	gãm∂©e
<
˛ass
 
	gT
> 

75 
	gfifo
<
	gT
>::
	$deq
(
T
 *
e
)

77 
Sc›edLock
 
	`ml
(&
m_
);

80 if(
q_
.
	`em±y
()){

81 
	`VERIFY
 (
	`±hªad_c⁄d_waô
(&
n⁄_em±y_c_
, &
m_
) == 0);

83 *
e
 = 
q_
.
	`‰⁄t
();

84 
q_
.
	`p›_‰⁄t
();

85 i‡(
max_
 && 
q_
.
	`size
() < max_) {

86 
	`VERIFY
(
	`±hªad_c⁄d_sig«l
(&
has_•a˚_c_
)==0);

92 
	}
}

	@rpc/jsl_log.cc

1 
	~"j¶_log.h
"

3 
	gJSL_DEBUG_LEVEL
 = 0;

5 
	$j¶_£t_debug
(
Àvñ
) {

6 
JSL_DEBUG_LEVEL
 = 
Àvñ
;

7 
	}
}

	@rpc/jsl_log.h

1 #i‚de‡
__JSL_LOG_H__


2 
	#__JSL_LOG_H__
 1

	)

4 
	edbcode
 {

5 
	mJSL_DBG_OFF
 = 0,

6 
	mJSL_DBG_1
 = 1,

7 
	mJSL_DBG_2
 = 2,

8 
	mJSL_DBG_3
 = 3,

9 
	mJSL_DBG_4
 = 4,

12 
JSL_DEBUG_LEVEL
;

14 
	#j¶_log
(
Àvñ
,...Ë\

	)

16 if(
	gJSL_DEBUG_LEVEL
 < 
abs
(
Àvñ
)) \

19 { 
¥ötf
(
__VA_ARGS__
);} \

23 
	`j¶_£t_debug
(
Àvñ
);

	@rpc/marshall.h

1 #i‚de‡
m¨shÆl_h


2 
	#m¨shÆl_h


	)

4 
	~<io°ªam
>

5 
	~<s°ªam
>

6 
	~<°rög
>

7 
	~<ve˘‹
>

8 
	~<m≠
>

9 
	~<°dlib.h
>

10 
	~<°rög.h
>

11 
	~<c°ddef
>

12 
	~<öây≥s.h
>

13 
	~"œng/vîify.h
"

14 
	~"œng/Æg‹ôhm.h
"

16 
	sªq_hódî
 {

17 
ªq_hódî
(
x
=0, 
p
=0, 
c
 = 0, 
s
 = 0, 
xi
 = 0):

18 
xid
(
x
), 
¥oc
(
p
), 
˛t_n⁄˚
(
c
), 
§v_n⁄˚
(
s
), 
xid_ªp
(
xi
) {}

19 
	mxid
;

20 
	m¥oc
;

21 
	m˛t_n⁄˚
;

22 
	m§v_n⁄˚
;

23 
	mxid_ªp
;

26 
	sª∂y_hódî
 {

27 
ª∂y_hódî
(
x
=0, 
r
=0): 
xid
(x), 
ªt
(r) {}

28 
	mxid
;

29 
	mªt
;

32 
uöt64_t
 
	tΩc_checksum_t
;

33 
	tΩc_sz_t
;

37 
	mDEFAULT_RPC_SZ
 = 1024,

38 #i‡
RPC_CHECKSUMMING


40 
	mRPC_HEADER_SZ
 = 
°©ic_max
<(
ªq_hódî
), (
	mª∂y_hódî
)>::
vÆue
 + (
Ωc_sz_t
Ë+ (
Ωc_checksum_t
)

42 
RPC_HEADER_SZ
 = 
°©ic_max
<(
ªq_hódî
), (
	mª∂y_hódî
)>::
vÆue
 + (
Ωc_sz_t
)

46 ˛as†
	cm¨shÆl
 {

47 
	m¥iv©e
:

48 *
_buf
;

49 
	m_ˇ∑
;

50 
	m_öd
;

52 
	mpublic
:

53 
	$m¨shÆl
() {

54 
_buf
 = (*Ë
	`mÆloc
(()*
DEFAULT_RPC_SZ
);

55 
	`VERIFY
(
_buf
);

56 
_ˇ∑
 = 
DEFAULT_RPC_SZ
;

57 
_öd
 = 
RPC_HEADER_SZ
;

60 ~
	$m¨shÆl
() {

61 i‡(
_buf
)

62 
	`‰ì
(
_buf
);

63 
	}
}

65 
	$size
(Ë{  
_öd
;
	}
}

66 *
	$c°r
(Ë{  
_buf
;
	}
}

68 
øwbyã
();

69 
øwbyãs
(const *, );

72 
	g°d
::
°rög
 
	$gë_c⁄ã¡
() {

73  
°d
::
	`°rög
(
_buf
+
RPC_HEADER_SZ
,
_öd
-RPC_HEADER_SZ);

74 
	}
}

77 
	g°d
::
°rög
 
	$°r
() {

78  
	`gë_c⁄ã¡
();

79 
	}
}

81 
∑ck
(
i
);

83 
	$∑ck_ªq_hódî
(c⁄° 
ªq_hódî
 &
h
) {

84 
ßved_sz
 = 
_öd
;

86 
_öd
 = (
Ωc_sz_t
);

87 #i‡
RPC_CHECKSUMMING


88 
_öd
 +(
Ωc_checksum_t
);

90 
	`∑ck
(
h
.
xid
);

91 
	`∑ck
(
h
.
¥oc
);

92 
	`∑ck
(()
h
.
˛t_n⁄˚
);

93 
	`∑ck
(()
h
.
§v_n⁄˚
);

94 
	`∑ck
(
h
.
xid_ªp
);

95 
_öd
 = 
ßved_sz
;

96 
	}
}

98 
	$∑ck_ª∂y_hódî
(c⁄° 
ª∂y_hódî
 &
h
) {

99 
ßved_sz
 = 
_öd
;

101 
_öd
 = (
Ωc_sz_t
);

102 #i‡
RPC_CHECKSUMMING


103 
_öd
 +(
Ωc_checksum_t
);

105 
	`∑ck
(
h
.
xid
);

106 
	`∑ck
(
h
.
ªt
);

107 
_öd
 = 
ßved_sz
;

108 
	}
}

110 
	$èke_buf
(**
b
, *
s
) {

111 *
b
 = 
_buf
;

112 *
s
 = 
_öd
;

113 
_buf
 = 
NULL
;

114 
_öd
 = 0;

116 
	}
}

118 
	gm¨shÆl
& 
	g›î©‹
<<(m¨shÆ»&, 
	gboﬁ
);

119 
	gm¨shÆl
& 
	g›î©‹
<<(marshall &, );

120 
	gm¨shÆl
& 
	g›î©‹
<<(marshall &, );

121 
	gm¨shÆl
& 
	g›î©‹
<<(marshall &, );

122 
	gm¨shÆl
& 
	g›î©‹
<<(marshall &, );

123 
	gm¨shÆl
& 
	g›î©‹
<<(marshall &, );

124 
	gm¨shÆl
& 
	g›î©‹
<<(marshall &, );

125 
	gm¨shÆl
& 
	g›î©‹
<<(marshall &, );

126 
	gm¨shÆl
& 
	g›î©‹
<<(m¨shÆ»&, c⁄° 
	g°d
::
°rög
 &);

128 ˛as†
	cunm¨shÆl
 {

129 
	m¥iv©e
:

130 *
_buf
;

131 
	m_sz
;

132 
	m_öd
;

133 
boﬁ
 
	m_ok
;

134 
	mpublic
:

135 
	$unm¨shÆl
(): 
	`_buf
(
NULL
),
	`_sz
(0),
	`_öd
(0),
	$_ok
(
Ál£
) {}

136 
	$unm¨shÆl
(*
b
, 
sz
): 
	`_buf
(b),
	`_sz
(sz),
	`_öd
(),
	$_ok
(
åue
Ë{
	}
}

137 
unm¨shÆl
(c⁄° 
°d
::
°rög
 &
s
Ë: 
_buf
(
NULL
),
_sz
(0),
_öd
(0),
	$_ok
(
Ál£
)

140 
	`èke_c⁄ã¡
(
s
);

141 
	}
}

142 ~
	$unm¨shÆl
() {

143 i‡(
_buf
Ë
	`‰ì
(_buf);

144 
	}
}

147 
èke_ö
(
unm¨shÆl
 &
™Ÿhî
);

150 
èke_c⁄ã¡
(c⁄° 
°d
::
°rög
 &
s
) {

151 
_sz
 = 
s
.
size
()+
RPC_HEADER_SZ
;

152 
	g_buf
 = (*)
ªÆloc
(
_buf
,
_sz
);

153 
VERIFY
(
_buf
);

154 
	g_öd
 = 
RPC_HEADER_SZ
;

155 
mem˝y
(
_buf
+
_öd
, 
s
.
d©a
(), s.
size
());

156 
	g_ok
 = 
åue
;

159 
boﬁ
 
	$ok
(Ë{  
_ok
; 
	}
}

160 *
	$c°r
(Ë{  
_buf
;
	}
}

161 
boﬁ
 
okd⁄e
();

162 
øwbyã
();

163 
øwbyãs
(
°d
::
°rög
 &
s
, 
n
);

165 
	$öd
(Ë{  
_öd
;
	}
}

166 
	$size
(Ë{  
_sz
;
	}
}

167 
u≈ack
(*);

168 
	$èke_buf
(**
b
, *
sz
) {

169 *
b
 = 
_buf
;

170 *
sz
 = 
_sz
;

171 
_sz
 = 
_öd
 = 0;

172 
_buf
 = 
NULL
;

173 
	}
}

175 
	$u≈ack_ªq_hódî
(
ªq_hódî
 *
h
) {

177 
_öd
 = (
Ωc_sz_t
);

178 #i‡
RPC_CHECKSUMMING


179 
_öd
 +(
Ωc_checksum_t
);

181 
	`u≈ack
(&
h
->
xid
);

182 
	`u≈ack
(&
h
->
¥oc
);

183 
	`u≈ack
((*)&
h
->
˛t_n⁄˚
);

184 
	`u≈ack
((*)&
h
->
§v_n⁄˚
);

185 
	`u≈ack
(&
h
->
xid_ªp
);

186 
_öd
 = 
RPC_HEADER_SZ
;

187 
	}
}

189 
	$u≈ack_ª∂y_hódî
(
ª∂y_hódî
 *
h
) {

191 
_öd
 = (
Ωc_sz_t
);

192 #i‡
RPC_CHECKSUMMING


193 
_öd
 +(
Ωc_checksum_t
);

195 
	`u≈ack
(&
h
->
xid
);

196 
	`u≈ack
(&
h
->
ªt
);

197 
_öd
 = 
RPC_HEADER_SZ
;

198 
	}
}

201 
	gunm¨shÆl
& 
	g›î©‹
>>(unm¨shÆ»&, 
	gboﬁ
 &);

202 
	gunm¨shÆl
& 
	g›î©‹
>>(unmarshall &, &);

203 
	gunm¨shÆl
& 
	g›î©‹
>>(unmarshall &, &);

204 
	gunm¨shÆl
& 
	g›î©‹
>>(unmarshall &, &);

205 
	gunm¨shÆl
& 
	g›î©‹
>>(unmarshall &, &);

206 
	gunm¨shÆl
& 
	g›î©‹
>>(unmarshall &, &);

207 
	gunm¨shÆl
& 
	g›î©‹
>>(unmarshall &, &);

208 
	gunm¨shÆl
& 
	g›î©‹
>>(unmarshall &, &);

209 
	gunm¨shÆl
& 
	g›î©‹
>>(unm¨shÆ»&, 
	g°d
::
°rög
 &);

211 
	gãm∂©e
 <
˛ass
 
	gC
> 
	gm¨shÆl
 &

212 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	g°d
::
ve˘‹
<
C
> 
v
)

214 
m
 << (Ë
v
.
size
();

215 
	gi
 = 0; i < 
	gv
.
size
(); i++)

216 
	gm
 << 
	gv
[
i
];

217  
	gm
;

220 
	gãm∂©e
 <
˛ass
 
	gC
> 
	gunm¨shÆl
 &

221 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, 
	g°d
::
ve˘‹
<
C
> &
v
)

223 
n
;

224 
	gu
 >> 
	gn
;

225 
	gi
 = 0; i < 
	gn
; i++){

226 
C
 
	gz
;

227 
	gu
 >> 
	gz
;

228 
	gv
.
push_back
(
z
);

230  
	gu
;

233 
	gãm∂©e
 <
˛ass
 
	gA
, cœs†
	gB
> 
	gm¨shÆl
 &

234 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, c⁄° 
	g°d
::
m≠
<
A
,
	gB
> &
	gd
) {

235 
ty≥«me
 
	g°d
::
m≠
<
A
,
	gB
>::
c⁄°_ôî©‹
 
i
;

237 
	gm
 << (Ë
	gd
.
size
();

239 
	gi
 = 
d
.
begö
(); i !d.
íd
(); i++) {

240 
	gm
 << 
	gi
->
	gfú°
 << i->
	g£c⁄d
;

242  
	gm
;

245 
	gãm∂©e
 <
˛ass
 
	gA
, cœs†
	gB
> 
	gunm¨shÆl
 &

246 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, 
	g°d
::
m≠
<
A
,
	gB
> &
	gd
) {

247 
	gn
;

248 
	gu
 >> 
	gn
;

250 
	gd
.
˛ór
();

252 
	glcv
 = 0;Ücv < 
	gn
;Ücv++) {

253 
A
 
	ga
;

254 
B
 
	gb
;

255 
	gu
 >> 
	ga
 >> 
	gb
;

256 
	gd
[
a
] = 
b
;

258  
	gu
;

	@rpc/method_thread.h

1 #i‚de‡
mëhod_thªad_h


2 
	#mëhod_thªad_h


	)

7 
	~<±hªad.h
>

8 
	~<°dio.h
>

9 
	~<°rög.h
>

10 
	~<°dlib.h
>

11 
	~"œng/vîify.h
"

13 
±hªad_t


14 
mëhod_thªad_∑ª¡
(*(*
‚
)(*), *
¨g
, 
boﬁ
 
dëach
)

16 
±hªad_t
 
	gth
;

17 
±hªad_©å_t
 
	g©å
;

18 
±hªad_©å_öô
(&
©å
);

20 
±hªad_©å_£t°acksize
(&
©å
, 100*1024);

21 
	gîr
 = 
±hªad_¸óã
(&
th
, &
©å
, 
‚
, 
¨g
);

22 
±hªad_©å_de°roy
(&
©å
);

23 i‡(
	gîr
 != 0) {

24 
Ârötf
(
°dîr
, "±hªad_¸óãÑë %d %s\n", 
îr
, 
°ªº‹
(err));

25 
exô
(1);

28 i‡(
	gdëach
) {

32 
VERIFY
(
±hªad_dëach
(
th
) == 0);

35  
	gth
;

39 
	$mëhod_thªad_chûd
()

43 
ﬁd°©e
, 
ﬁdty≥
;

44 
	`VERIFY
(
	`±hªad_£tˇn˚l°©e
(
PTHREAD_CANCEL_DISABLE
, &
ﬁd°©e
) == 0);

45 
	`VERIFY
(
	`±hªad_£tˇn˚…y≥
(
PTHREAD_CANCEL_DEFERRED
, &
ﬁdty≥
) == 0);

46 
	}
}

48 
	gãm∂©e
 <
˛ass
 
	gC
> 
±hªad_t


49 
mëhod_thªad
(
C
 *
o
, 
boﬁ
 
dëach
, (C::*
m
)())

51 ˛as†
	cXXX
 {

52 
public
:

53 
C
 *
o
;

54 (
	gC
::*
m
)();

55 *
yyy
(*
vvv
) {

56 
XXX
 *
	gx
 = (XXX*)
vvv
;

57 
C
 *
	go
 = 
x
->
o
;

58 (
	gC
::*
m
)(Ë
x
->m;

59 
dñëe
 
	gx
;

60 
mëhod_thªad_chûd
();

61 (
	go
->*
	gm
)();

65 
XXX
 *
	gx
 = 
√w
 XXX;

66 
	gx
->
	go
 = 
o
;

67 
	gx
->
	gm
 = 
m
;

68  
mëhod_thªad_∑ª¡
(&
XXX
::
yyy
, (*Ë
x
, 
dëach
);

71 
	gãm∂©e
 <
˛ass
 
	gC
, cœs†
	gA
> 
±hªad_t


72 
mëhod_thªad
(
C
 *
o
, 
boﬁ
 
dëach
, (C::*
m
)(
A
), A 
a
)

74 ˛as†
	cXXX
 {

75 
	gpublic
:

76 
C
 *
o
;

77 (
	gC
::*
m
)(
A
 
a
);

78 
A
 
	ga
;

79 *
yyy
(*
vvv
) {

80 
XXX
 *
	gx
 = (XXX*)
vvv
;

81 
C
 *
	go
 = 
x
->
o
;

82 (
	gC
::*
m
)(
A
 ) = 
x
->m;

83 
A
 
	ga
 = 
x
->
a
;

84 
dñëe
 
	gx
;

85 
mëhod_thªad_chûd
();

86 (
	go
->*
	gm
)(
	ga
);

90 
XXX
 *
	gx
 = 
√w
 XXX;

91 
	gx
->
	go
 = 
o
;

92 
	gx
->
	gm
 = 
m
;

93 
	gx
->
	ga
 = 
a
;

94  
mëhod_thªad_∑ª¡
(&
XXX
::
yyy
, (*Ë
x
, 
dëach
);

97 
	g«me•a˚
 {

100 
	gãm∂©e
 <
˛ass
 
	gC
, cœs†
	gA1
, cœs†
	gA2
>

101 ˛as†
	cXXX
 {

102 
	gpublic
:

103 
C
 *
o
;

104 (
	gC
::*
m
)(
A1
 
a1
, 
A2
 
	ga2
);

105 
A1
 
	ga1
;

106 
A2
 
	ga2
;

107 *
yyy
(*
vvv
) {

108 
XXX
 *
	gx
 = (XXX*)
vvv
;

109 
C
 *
	go
 = 
x
->
o
;

110 (
	gC
::*
m
)(
A1
 , 
	gA2
 ) = 
x
->m;

111 
A1
 
	ga1
 = 
x
->
a1
;

112 
A2
 
	ga2
 = 
x
->
a2
;

113 
dñëe
 
	gx
;

114 
mëhod_thªad_chûd
();

115 (
	go
->*
	gm
)(
	ga1
, 
	ga2
);

121 
	gãm∂©e
 <
˛ass
 
	gC
, cœs†
	gA1
, cœs†
	gA2
> 
±hªad_t


122 
mëhod_thªad
(
C
 *
o
, 
boﬁ
 
dëach
, (C::*
m
)(
A1
 , 
A2
 ), A1 
a1
, A2 
a2
)

124 
	gXXX
<
	gC
,
	gA1
,
	gA2
> *
	gx
 = 
√w
 
XXX
<
C
,A1,A2>;

125 
	gx
->
	go
 = 
o
;

126 
	gx
->
	gm
 = 
m
;

127 
	gx
->
	ga1
 = 
a1
;

128 
	gx
->
	ga2
 = 
a2
;

129  
mëhod_thªad_∑ª¡
(&
XXX
<
C
,
A1
,
A2
>::
yyy
, (*Ë
x
, 
dëach
);

132 
	gãm∂©e
 <
˛ass
 
	gC
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
> 
±hªad_t


133 
mëhod_thªad
(
C
 *
o
, 
boﬁ
 
dëach
, (C::*
m
)(
A1
 , 
A2
, 
A3
 ), A1 
a1
, A2 
a2
, A3 
a3
)

135 ˛as†
	cXXX
 {

136 
	gpublic
:

137 
C
 *
o
;

138 (
	gC
::*
m
)(
A1
 
a1
, 
A2
 
	ga2
, 
A3
 
	ga3
);

139 
A1
 
	ga1
;

140 
A2
 
	ga2
;

141 
A3
 
	ga3
;

142 *
yyy
(*
vvv
) {

143 
XXX
 *
	gx
 = (XXX*)
vvv
;

144 
C
 *
	go
 = 
x
->
o
;

145 (
	gC
::*
m
)(
A1
 , 
	gA2
 , 
	gA3
 ) = 
x
->m;

146 
A1
 
	ga1
 = 
x
->
a1
;

147 
A2
 
	ga2
 = 
x
->
a2
;

148 
A3
 
	ga3
 = 
x
->
a3
;

149 
dñëe
 
	gx
;

150 
mëhod_thªad_chûd
();

151 (
	go
->*
	gm
)(
	ga1
, 
	ga2
, 
	ga3
);

155 
XXX
 *
	gx
 = 
√w
 XXX;

156 
	gx
->
	go
 = 
o
;

157 
	gx
->
	gm
 = 
m
;

158 
	gx
->
	ga1
 = 
a1
;

159 
	gx
->
	ga2
 = 
a2
;

160 
	gx
->
	ga3
 = 
a3
;

161  
mëhod_thªad_∑ª¡
(&
XXX
::
yyy
, (*Ë
x
, 
dëach
);

	@rpc/pollmgr.cc

1 
	~<sys/time.h
>

2 
	~<î∫o.h
>

3 
	~<f˙é.h
>

4 
	~<uni°d.h
>

6 
	~"¶ock.h
"

7 
	~"j¶_log.h
"

8 
	~"mëhod_thªad.h
"

9 
	~"œng/vîify.h
"

10 
	~"pﬁlmgr.h
"

12 
PﬁlMgr
 *
	gPﬁlMgr
::
ö°™˚
 = 
NULL
;

13 
±hªad_⁄˚_t
 
	gpﬁlmgr_is_öôülized
 = 
PTHREAD_ONCE_INIT
;

16 
	$PﬁlMgrInô
()

18 
PﬁlMgr
::
ö°™˚
 = 
√w
 
	`PﬁlMgr
();

19 
	}
}

21 
PﬁlMgr
 *

22 
	gPﬁlMgr
::
	$In°™˚
()

24 
	`±hªad_⁄˚
(&
pﬁlmgr_is_öôülized
, 
PﬁlMgrInô
);

25  
ö°™˚
;

26 
	}
}

28 
	gPﬁlMgr
::
	$PﬁlMgr
(Ë: 
	$≥ndög_ch™ge_
(
Ál£
)

30 
	`bzîo
(
ˇŒbacks_
, 
MAX_POLL_FDS
*(*));

31 
aio_
 = 
√w
 
	`Sñe˘AIO
();

34 
	`VERIFY
(
	`±hªad_muãx_öô
(&
m_
, 
NULL
) == 0);

35 
	`VERIFY
(
	`±hªad_c⁄d_öô
(&
ch™ged⁄e_c_
, 
NULL
) == 0);

36 
	`VERIFY
((
th_
 = 
	`mëhod_thªad
(
this
, 
Ál£
, &
PﬁlMgr
::
waô_lo›
)) != 0);

37 
	}
}

39 
	gPﬁlMgr
::~
	$PﬁlMgr
()

42 
	`VERIFY
(0);

43 
	}
}

46 
	gPﬁlMgr
::
	$add_ˇŒback
(
fd
, 
pﬁl_Êag
 
Êag
, 
aio_ˇŒback
 *
ch
)

48 
	`VERIFY
(
fd
 < 
MAX_POLL_FDS
);

50 
Sc›edLock
 
	`ml
(&
m_
);

51 
aio_
->
	`w©ch_fd
(
fd
, 
Êag
);

53 
	`VERIFY
(!
ˇŒbacks_
[
fd
] || cÆlbacks_[fd]==
ch
);

54 
ˇŒbacks_
[
fd
] = 
ch
;

55 
	}
}

61 
	gPﬁlMgr
::
	$block_ªmove_fd
(
fd
)

63 
Sc›edLock
 
	`ml
(&
m_
);

64 
aio_
->
	`unw©ch_fd
(
fd
, 
CB_RDWR
);

65 
≥ndög_ch™ge_
 = 
åue
;

66 
	`VERIFY
(
	`±hªad_c⁄d_waô
(&
ch™ged⁄e_c_
, &
m_
)==0);

67 
ˇŒbacks_
[
fd
] = 
NULL
;

68 
	}
}

71 
	gPﬁlMgr
::
	$dñ_ˇŒback
(
fd
, 
pﬁl_Êag
 
Êag
)

73 
Sc›edLock
 
	`ml
(&
m_
);

74 i‡(
aio_
->
	`unw©ch_fd
(
fd
, 
Êag
)) {

75 
ˇŒbacks_
[
fd
] = 
NULL
;

77 
	}
}

79 
boﬁ


80 
	gPﬁlMgr
::
	$has_ˇŒback
(
fd
, 
pﬁl_Êag
 
Êag
, 
aio_ˇŒback
 *
c
)

82 
Sc›edLock
 
	`ml
(&
m_
);

83 i‡(!
ˇŒbacks_
[
fd
] || cÆlbacks_[fd]!=
c
)

84  
Ál£
;

86  
aio_
->
	`is_w©ched
(
fd
, 
Êag
);

87 
	}
}

90 
	gPﬁlMgr
::
	$waô_lo›
()

93 
°d
::
ve˘‹
<> 
ªadabÀ
;

94 
°d
::
ve˘‹
<> 
wrôabÀ
;

98 
Sc›edLock
 
	`ml
(&
m_
);

99 i‡(
≥ndög_ch™ge_
) {

100 
≥ndög_ch™ge_
 = 
Ál£
;

101 
	`VERIFY
(
	`±hªad_c⁄d_brﬂdˇ°
(&
ch™ged⁄e_c_
)==0);

104 
ªadabÀ
.
	`˛ór
();

105 
wrôabÀ
.
	`˛ór
();

106 
aio_
->
	`waô_ªady
(&
ªadabÀ
,&
wrôabÀ
);

108 i‡(!
ªadabÀ
.
	`size
(Ë&& !
wrôabÀ
.size()) {

114 
i
 = 0; i < 
ªadabÀ
.
	`size
(); i++) {

115 
fd
 = 
ªadabÀ
[
i
];

116 i‡(
ˇŒbacks_
[
fd
])

117 
ˇŒbacks_
[
fd
]->
	`ªad_cb
(fd);

120 
i
 = 0; i < 
wrôabÀ
.
	`size
(); i++) {

121 
fd
 = 
wrôabÀ
[
i
];

122 i‡(
ˇŒbacks_
[
fd
])

123 
ˇŒbacks_
[
fd
]->
	`wrôe_cb
(fd);

126 
	}
}

128 
	gSñe˘AIO
::
	$Sñe˘AIO
(Ë: 
	$highfds_
(0)

130 
	`FD_ZERO
(&
rfds_
);

131 
	`FD_ZERO
(&
wfds_
);

133 
	`VERIFY
(
	`pùe
(
pùefd_
) == 0);

134 
	`FD_SET
(
pùefd_
[0], &
rfds_
);

135 
highfds_
 = 
pùefd_
[0];

137 
Êags
 = 
	`f˙é
(
pùefd_
[0], 
F_GETFL
, 
NULL
);

138 
Êags
 |
O_NONBLOCK
;

139 
	`f˙é
(
pùefd_
[0], 
F_SETFL
, 
Êags
);

141 
	`VERIFY
(
	`±hªad_muãx_öô
(&
m_
, 
NULL
) == 0);

142 
	}
}

144 
	gSñe˘AIO
::~
	$Sñe˘AIO
()

146 
	`VERIFY
(
	`±hªad_muãx_de°roy
(&
m_
) == 0);

147 
	}
}

150 
	gSñe˘AIO
::
	$w©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
)

152 
Sc›edLock
 
	`ml
(&
m_
);

153 i‡(
highfds_
 <
fd
)

154 
highfds_
 = 
fd
;

156 i‡(
Êag
 =
CB_RDONLY
) {

157 
	`FD_SET
(
fd
,&
rfds_
);

158 }i‡(
Êag
 =
CB_WRONLY
) {

159 
	`FD_SET
(
fd
,&
wfds_
);

161 
	`FD_SET
(
fd
,&
rfds_
);

162 
	`FD_SET
(
fd
,&
wfds_
);

165 
tmp
 = 1;

166 
	`VERIFY
(
	`wrôe
(
pùefd_
[1], &
tmp
, (tmp))==1);

167 
	}
}

169 
boﬁ


170 
	gSñe˘AIO
::
	$is_w©ched
(
fd
, 
pﬁl_Êag
 
Êag
)

172 
Sc›edLock
 
	`ml
(&
m_
);

173 i‡(
Êag
 =
CB_RDONLY
) {

174  
	`FD_ISSET
(
fd
,&
rfds_
);

175 }i‡(
Êag
 =
CB_WRONLY
) {

176  
	`FD_ISSET
(
fd
,&
wfds_
);

178  (
	`FD_ISSET
(
fd
,&
rfds_
Ë&& FD_ISSET(fd,&
wfds_
));

180 
	}
}

182 
boﬁ


183 
	gSñe˘AIO
::
	$unw©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
)

185 
Sc›edLock
 
	`ml
(&
m_
);

186 i‡(
Êag
 =
CB_RDONLY
) {

187 
	`FD_CLR
(
fd
, &
rfds_
);

188 }i‡(
Êag
 =
CB_WRONLY
) {

189 
	`FD_CLR
(
fd
, &
wfds_
);

190 }i‡(
Êag
 =
CB_RDWR
) {

191 
	`FD_CLR
(
fd
, &
wfds_
);

192 
	`FD_CLR
(
fd
, &
rfds_
);

194 
	`VERIFY
(0);

197 i‡(!
	`FD_ISSET
(
fd
,&
rfds_
Ë&& !FD_ISSET(fd,&
wfds_
)) {

198 i‡(
fd
 =
highfds_
) {

199 
√wh
 = 
pùefd_
[0];

200 
i
 = 0; i <
highfds_
; i++) {

201 i‡(
	`FD_ISSET
(
i
, &
rfds_
)) {

202 
√wh
 = 
i
;

203 }i‡(
	`FD_ISSET
(
i
, &
wfds_
)) {

204 
√wh
 = 
i
;

207 
highfds_
 = 
√wh
;

210 i‡(
Êag
 =
CB_RDWR
) {

211 
tmp
 = 1;

212 
	`VERIFY
(
	`wrôe
(
pùefd_
[1], &
tmp
, (tmp))==1);

214  (!
	`FD_ISSET
(
fd
, &
rfds_
Ë&& !FD_ISSET(fd, &
wfds_
));

215 
	}
}

218 
	gSñe˘AIO
::
waô_ªady
(
°d
::
ve˘‹
<> *
ªadabÀ
, std::ve˘‹<> *
wrôabÀ
)

220 
fd_£t
 
åfds
, 
	gtwfds
;

221 
	ghigh
;

224 
Sc›edLock
 
ml
(&
m_
);

225 
	gåfds
 = 
rfds_
;

226 
	gtwfds
 = 
wfds_
;

227 
	ghigh
 = 
highfds_
;

231 
	gªt
 = 
£À˘
(
high
+1, &
åfds
, &
twfds
, 
NULL
, NULL);

233 i‡(
	gªt
 < 0) {

234 i‡(
	gî∫o
 =
EINTR
) {

237 
≥º‹
("select:");

238 
j¶_log
(
JSL_DBG_OFF
, "PﬁlMgr::£À˘_lo› faûuªÉºnÿ%d\n",
î∫o
);

239 
VERIFY
(0);

243 
	gfd
 = 0; fd <
high
; fd++) {

244 i‡(
	gfd
 =
pùefd_
[0] && 
FD_ISSET
(
fd
, &
åfds
)) {

245 
	gtmp
;

246 
VERIFY
 (
ªad
(
pùefd_
[0],&
tmp
,(tmp))==1);

247 
VERIFY
(
tmp
==1);

249 i‡(
FD_ISSET
(
fd
, &
twfds
)) {

250 
	gwrôabÀ
->
push_back
(
fd
);

252 i‡(
FD_ISSET
(
fd
, &
åfds
)) {

253 
	gªadabÀ
->
push_back
(
fd
);

259 #ifde‡
__löux__


261 
	gEPﬁlAIO
::
	$EPﬁlAIO
()

263 
pﬁlfd_
 = 
	`ïﬁl_¸óã
(
MAX_POLL_FDS
);

264 
	`VERIFY
(
pﬁlfd_
 >= 0);

265 
	`bzîo
(
fd°©us_
, ()*
MAX_POLL_FDS
);

266 
	}
}

268 
	gEPﬁlAIO
::~
	$EPﬁlAIO
()

270 
	`˛o£
(
pﬁlfd_
);

271 
	}
}

273 
ölöe


274 
	$pﬁl_Êag_to_evít
(
pﬁl_Êag
 
Êag
)

276 
f
;

277 i‡(
Êag
 =
CB_RDONLY
) {

278 
f
 = 
EPOLLIN
;

279 }i‡(
Êag
 =
CB_WRONLY
) {

280 
f
 = 
EPOLLOUT
;

282 
f
 = 
EPOLLIN
 | 
EPOLLOUT
;

284  
f
;

285 
	}
}

288 
	gEPﬁlAIO
::
	$w©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
)

290 
	`VERIFY
(
fd
 < 
MAX_POLL_FDS
);

292 
ïﬁl_evít
 
ev
;

293 
›
 = 
fd°©us_
[
fd
]? 
EPOLL_CTL_MOD
 : 
EPOLL_CTL_ADD
;

294 
fd°©us_
[
fd
] |()
Êag
;

296 
ev
.
evíts
 = 
EPOLLET
;

297 
ev
.
d©a
.
fd
 = fd;

299 i‡(
fd°©us_
[
fd
] & 
CB_RDONLY
) {

300 
ev
.
evíts
 |
EPOLLIN
;

302 i‡(
fd°©us_
[
fd
] & 
CB_WRONLY
) {

303 
ev
.
evíts
 |
EPOLLOUT
;

306 i‡(
Êag
 =
CB_RDWR
) {

307 
	`VERIFY
(
ev
.
evíts
 =(
uöt32_t
)(
EPOLLET
 | 
EPOLLIN
 | 
EPOLLOUT
));

310 
	`VERIFY
(
	`ïﬁl_˘l
(
pﬁlfd_
, 
›
, 
fd
, &
ev
) == 0);

311 
	}
}

313 
boﬁ


314 
	gEPﬁlAIO
::
	$unw©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
)

316 
	`VERIFY
(
fd
 < 
MAX_POLL_FDS
);

317 
fd°©us_
[
fd
] &~()
Êag
;

319 
ïﬁl_evít
 
ev
;

320 
›
 = 
fd°©us_
[
fd
]? 
EPOLL_CTL_MOD
 : 
EPOLL_CTL_DEL
;

322 
ev
.
evíts
 = 
EPOLLET
;

323 
ev
.
d©a
.
fd
 = fd;

325 i‡(
fd°©us_
[
fd
] & 
CB_RDONLY
) {

326 
ev
.
evíts
 |
EPOLLIN
;

328 i‡(
fd°©us_
[
fd
] & 
CB_WRONLY
) {

329 
ev
.
evíts
 |
EPOLLOUT
;

332 i‡(
Êag
 =
CB_RDWR
) {

333 
	`VERIFY
(
›
 =
EPOLL_CTL_DEL
);

335 
	`VERIFY
(
	`ïﬁl_˘l
(
pﬁlfd_
, 
›
, 
fd
, &
ev
) == 0);

336  (
›
 =
EPOLL_CTL_DEL
);

337 
	}
}

339 
boﬁ


340 
	gEPﬁlAIO
::
	$is_w©ched
(
fd
, 
pﬁl_Êag
 
Êag
)

342 
	`VERIFY
(
fd
 < 
MAX_POLL_FDS
);

343  ((
fd°©us_
[
fd
] & 
CB_MASK
Ë=
Êag
);

344 
	}
}

347 
	gEPﬁlAIO
::
waô_ªady
(
°d
::
ve˘‹
<> *
ªadabÀ
, std::ve˘‹<> *
wrôabÀ
)

349 
nfds
 = 
ïﬁl_waô
(
pﬁlfd_
, 
ªady_
, 
MAX_POLL_FDS
, -1);

350 
	gi
 = 0; i < 
	gnfds
; i++) {

351 i‡(
	gªady_
[
i
].
	gevíts
 & 
	gEPOLLIN
) {

352 
	gªadabÀ
->
push_back
(
ªady_
[
i
].
d©a
.
fd
);

354 i‡(
	gªady_
[
i
].
	gevíts
 & 
	gEPOLLOUT
) {

355 
	gwrôabÀ
->
push_back
(
ªady_
[
i
].
d©a
.
fd
);

	@rpc/pollmgr.h

1 #i‚de‡
pﬁlmgr_h


2 
	#pﬁlmgr_h


	)

4 
	~<sys/£À˘.h
>

5 
	~<ve˘‹
>

7 #ifde‡
__löux__


8 
	~<sys/ïﬁl.h
>

11 
	#MAX_POLL_FDS
 128

	)

14 
	mCB_NONE
 = 0x0,

15 
	mCB_RDONLY
 = 0x1,

16 
	mCB_WRONLY
 = 0x10,

17 
	mCB_RDWR
 = 0x11,

18 
	mCB_MASK
 = ~0x11,

19 } 
	tpﬁl_Êag
;

21 ˛as†
	caio_mgr
 {

22 
	mpublic
:

23 
vútuÆ
 
w©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
) = 0;

24 
vútuÆ
 
boﬁ
 
unw©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
) = 0;

25 
vútuÆ
 
boﬁ
 
is_w©ched
(
fd
, 
pﬁl_Êag
 
Êag
) = 0;

26 
vútuÆ
 
waô_ªady
(
°d
::
ve˘‹
<> *
ªadabÀ
, std::ve˘‹<> *
wrôabÀ
) = 0;

27 
	mvútuÆ
 ~
	$aio_mgr
() {}

28 
	}
};

30 ˛as†
	caio_ˇŒback
 {

31 
	mpublic
:

32 
vútuÆ
 
ªad_cb
(
fd
) = 0;

33 
vútuÆ
 
wrôe_cb
(
fd
) = 0;

34 
	mvútuÆ
 ~
	$aio_ˇŒback
() {}

35 
	}
};

37 ˛as†
	cPﬁlMgr
 {

38 
	mpublic
:

39 
PﬁlMgr
();

40 ~
PﬁlMgr
();

42 
PﬁlMgr
 *
In°™˚
();

43 
PﬁlMgr
 *
Cª©eIn°
();

45 
add_ˇŒback
(
fd
, 
pﬁl_Êag
 
Êag
, 
aio_ˇŒback
 *
ch
);

46 
dñ_ˇŒback
(
fd
, 
pﬁl_Êag
 
Êag
);

47 
boﬁ
 
has_ˇŒback
(
fd
, 
pﬁl_Êag
 
Êag
, 
aio_ˇŒback
 *
ch
);

48 
block_ªmove_fd
(
fd
);

49 
waô_lo›
();

52 
PﬁlMgr
 *
	mö°™˚
;

53 
	mu£ful
;

54 
	mu£Àss
;

56 
	m¥iv©e
:

57 
±hªad_muãx_t
 
m_
;

58 
±hªad_c⁄d_t
 
	mch™ged⁄e_c_
;

59 
±hªad_t
 
	mth_
;

61 
aio_ˇŒback
 *
	mˇŒbacks_
[
MAX_POLL_FDS
];

62 
aio_mgr
 *
	maio_
;

63 
boﬁ
 
	m≥ndög_ch™ge_
;

67 ˛as†
	cSñe˘AIO
 : 
public
 
aio_mgr
 {

68 
public
 :

70 
Sñe˘AIO
();

71 ~
Sñe˘AIO
();

72 
w©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
);

73 
boﬁ
 
unw©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
);

74 
boﬁ
 
is_w©ched
(
fd
, 
pﬁl_Êag
 
Êag
);

75 
waô_ªady
(
°d
::
ve˘‹
<> *
ªadabÀ
, std::ve˘‹<> *
wrôabÀ
);

77 
	m¥iv©e
:

79 
fd_£t
 
rfds_
;

80 
fd_£t
 
	mwfds_
;

81 
	mhighfds_
;

82 
	mpùefd_
[2];

84 
±hªad_muãx_t
 
	mm_
;

88 #ifde‡
__löux__


89 ˛as†
	cEPﬁlAIO
 : 
public
 
aio_mgr
 {

90 
public
:

91 
EPﬁlAIO
();

92 ~
EPﬁlAIO
();

93 
w©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
);

94 
boﬁ
 
unw©ch_fd
(
fd
, 
pﬁl_Êag
 
Êag
);

95 
boﬁ
 
is_w©ched
(
fd
, 
pﬁl_Êag
 
Êag
);

96 
waô_ªady
(
°d
::
ve˘‹
<> *
ªadabÀ
, std::ve˘‹<> *
wrôabÀ
);

98 
	m¥iv©e
:

99 
pﬁlfd_
;

100 
ïﬁl_evít
 
	mªady_
[
MAX_POLL_FDS
];

101 
	mfd°©us_
[
MAX_POLL_FDS
];

	@rpc/rpc.cc

63 
	~"Ωc.h
"

64 
	~"mëhod_thªad.h
"

65 
	~"¶ock.h
"

67 
	~<uni°d.h
>

68 
	~<sys/ty≥s.h
>

69 
	~<¨∑/öë.h
>

70 
	~<√töë/t˝.h
>

71 
	~<time.h
>

72 
	~<√tdb.h
>

74 
	~"j¶_log.h
"

75 
	~"gëtime.h
"

76 
	~"œng/vîify.h
"

78 c⁄° 
	gΩcc
::
TO
 
Ωcc
::
to_max
 = { 120000 };

79 c⁄° 
	gΩcc
::
TO
 
Ωcc
::
to_mö
 = { 1000 };

81 
	gΩcc
::
ˇŒî
::
	$ˇŒî
(
xxid
, 
unm¨shÆl
 *
xun
)

82 : 
	`xid
(
xxid
), 
	`un
(
xun
), 
	$d⁄e
(
Ál£
)

84 
	`VERIFY
(
	`±hªad_muãx_öô
(&
m
,0) == 0);

85 
	`VERIFY
(
	`±hªad_c⁄d_öô
(&
c
, 0) == 0);

86 
	}
}

88 
	gΩcc
::
ˇŒî
::~
	$ˇŒî
()

90 
	`VERIFY
(
	`±hªad_muãx_de°roy
(&
m
) == 0);

91 
	`VERIFY
(
	`±hªad_c⁄d_de°roy
(&
c
) == 0);

92 
	}
}

94 
ölöe


95 
	$£t_ønd_£ed
()

97 
time•ec
 
ts
;

98 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
ts
);

99 
	`§™dom
(()
ts
.
tv_n£c
^(()
	`gëpid
()));

100 
	}
}

102 
	gΩcc
::
	$Ωcc
(
sockaddr_ö
 
d
, 
boﬁ
 
ªå™s
) :

103 
	`d°_
(
d
), 
	`§v_n⁄˚_
(0), 
	`böd_d⁄e_
(
Ál£
), 
	`xid_
(1), 
	`lossyã°_
(0),

104 
	`ªå™s_
(
ªå™s
), 
	`ªachabÀ_
(
åue
), 
	`ch™_
(
NULL
), 
	`de°roy_waô_
 (
Ál£
), 
	`xid_ªp_d⁄e_
(-1)

106 
	`VERIFY
(
	`±hªad_muãx_öô
(&
m_
, 0) == 0);

107 
	`VERIFY
(
	`±hªad_muãx_öô
(&
ch™_m_
, 0) == 0);

108 
	`VERIFY
(
	`±hªad_c⁄d_öô
(&
de°roy_waô_c_
, 0) == 0);

110 if(
ªå™s
){

111 
	`£t_ønd_£ed
();

112 
˛t_n⁄˚_
 = 
	`øndom
();

117 
˛t_n⁄˚_
 = 0;

120 *
loss_ív
 = 
	`gëív
("RPC_LOSSY");

121 if(
loss_ív
 !
NULL
){

122 
lossyã°_
 = 
	`©oi
(
loss_ív
);

126 
xid_ªp_wödow_
.
	`push_back
(0);

128 
	`j¶_log
(
JSL_DBG_2
, "rpcc::rpcc cltn_nonce is %dÜossy %d\n",

129 
˛t_n⁄˚_
, 
lossyã°_
);

130 
	}
}

134 
	gΩcc
::~
	$Ωcc
()

136 
	`j¶_log
(
JSL_DBG_2
, "rpcc::~rpcc deleteÇonce %d channo=%d\n",

137 
˛t_n⁄˚_
, 
ch™_
?ch™_->
	`ch™no
():-1);

138 if(
ch™_
){

139 
ch™_
->
	`˛o£c⁄n
();

140 
ch™_
->
	`de¸ef
();

142 
	`VERIFY
(
ˇŒs_
.
	`size
() == 0);

143 
	`VERIFY
(
	`±hªad_muãx_de°roy
(&
m_
) == 0);

144 
	`VERIFY
(
	`±hªad_muãx_de°roy
(&
ch™_m_
) == 0);

145 
	}
}

148 
	gΩcc
::
	$böd
(
TO
 
to
)

150 
r
;

151 
ªt
 = 
	`ˇŒ
(
Ωc_c⁄°
::
böd
, 0, 
r
, 
to
);

152 if(
ªt
 == 0){

153 
Sc›edLock
 
	`ml
(&
m_
);

154 
böd_d⁄e_
 = 
åue
;

155 
§v_n⁄˚_
 = 
r
;

157 
	`j¶_log
(
JSL_DBG_2
, "rpcc::bind %s failed %d\n",

158 
	`öë_¡ﬂ
(
d°_
.
sö_addr
), 
ªt
);

160  
ªt
;

161 
	}
};

165 
	gΩcc
::
	$ˇn˚l
()

167 
Sc›edLock
 
	`ml
(&
m_
);

168 
	`¥ötf
("rpcc::cancel: force callersÅo fail\n");

169 
°d
::
m≠
<,
ˇŒî
*>::
ôî©‹
 
ôî
;

170 
ôî
 = 
ˇŒs_
.
	`begö
(); iã∏!ˇŒs_.
	`íd
(); iter++){

171 
ˇŒî
 *
ˇ
 = 
ôî
->
£c⁄d
;

173 
	`j¶_log
(
JSL_DBG_2
, "rpcc::cancel: force callerÅo fail\n");

175 
Sc›edLock
 
	`˛
(&
ˇ
->
m
);

176 
ˇ
->
d⁄e
 = 
åue
;

177 
ˇ
->
öåë
 = 
Ωc_c⁄°
::
ˇn˚l_Áûuª
;

178 
	`VERIFY
(
	`±hªad_c⁄d_sig«l
(&
ˇ
->
c
) == 0);

182 
ˇŒs_
.
	`size
 () > 0){

183 
de°roy_waô_
 = 
åue
;

184 
	`VERIFY
(
	`±hªad_c⁄d_waô
(&
de°roy_waô_c_
,&
m_
) == 0);

186 
	`¥ötf
("rpcc::cancel: done\n");

187 
	}
}

190 
	gΩcc
::
	$ˇŒ1
(
¥oc
, 
m¨shÆl
 &
ªq
, 
unm¨shÆl
 &
ªp
,

191 
TO
 
to
)

194 
ˇŒî
 
	`ˇ
(0, &
ªp
);

195 
xid_ªp
;

197 
Sc›edLock
 
	`ml
(&
m_
);

199 if((
¥oc
 !
Ωc_c⁄°
::
böd
 && !
böd_d⁄e_
) ||

200 (
¥oc
 =
Ωc_c⁄°
::
böd
 && 
böd_d⁄e_
)){

201 
	`j¶_log
(
JSL_DBG_1
, "rpcc::call1Ñpcc hasÇot been boundÅo dst or bindingÅwice\n");

202  
Ωc_c⁄°
::
böd_Áûuª
;

205 if(
de°roy_waô_
){

206  
Ωc_c⁄°
::
ˇn˚l_Áûuª
;

209 
ˇ
.
xid
 = 
xid_
++;

210 
ˇŒs_
[
ˇ
.
xid
] = &ca;

212 
ªq_hódî
 
	`h
(
ˇ
.
xid
, 
¥oc
, 
˛t_n⁄˚_
, 
§v_n⁄˚_
,

213 
xid_ªp_wödow_
.
	`‰⁄t
());

214 
ªq
.
	`∑ck_ªq_hódî
(
h
);

215 
xid_ªp
 = 
xid_ªp_wödow_
.
	`‰⁄t
();

218 
TO
 
cuº_to
;

219 
time•ec
 
now
, 
√xtdódlöe
, 
föÆdódlöe
;

221 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
now
);

222 
	`add_time•ec
(
now
, 
to
.to, &
föÆdódlöe
);

223 
cuº_to
.
to
 = 
to_mö
.to;

225 
boﬁ
 
å™smô
 = 
åue
;

226 
c⁄√˘i⁄
 *
ch
 = 
NULL
;

229 if(
å™smô
){

230 
	`gë_ªfc⁄n
(&
ch
);

231 if(
ch
){

232 if(
ªachabÀ_
) {

233 
ªque°
 
f‹gŸ
;

235 
Sc›edLock
 
	`ml
(&
m_
);

236 i‡(
dup_ªq_
.
	`isvÆid
(Ë&& 
xid_ªp_d⁄e_
 > dup_ªq_.
xid
) {

237 
f‹gŸ
 = 
dup_ªq_
;

238 
dup_ªq_
.
	`˛ór
();

241 i‡(
f‹gŸ
.
	`isvÆid
())

242 
ch
->
	`£nd
((*)
f‹gŸ
.
buf
.
	`c_°r
(), f‹gŸ.buf.
	`size
());

243 
ch
->
	`£nd
(
ªq
.
	`c°r
(),Ñeq.
	`size
());

245 
	`j¶_log
(
JSL_DBG_1
, "notÑeachable\n");

246 
	`j¶_log
(
JSL_DBG_2
,

248 
˛t_n⁄˚_
, 
¥oc
, 
ˇ
.
xid
, clt_nonce_);

250 
å™smô
 = 
Ál£
;

253 if(!
föÆdódlöe
.
tv_£c
)

256 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
now
);

257 
	`add_time•ec
(
now
, 
cuº_to
.
to
, &
√xtdódlöe
);

258 if(
	`cmp_time•ec
(
√xtdódlöe
,
föÆdódlöe
) > 0){

259 
√xtdódlöe
 = 
föÆdódlöe
;

260 
föÆdódlöe
.
tv_£c
 = 0;

264 
Sc›edLock
 
	`ˇl
(&
ˇ
.
m
);

265 !
ˇ
.
d⁄e
){

266 
	`j¶_log
(
JSL_DBG_2
, "rpcc:call1: wait\n");

267 if(
	`±hªad_c⁄d_timedwaô
(&
ˇ
.
c
, &ˇ.
m
,

268 &
√xtdódlöe
Ë=
ETIMEDOUT
){

269 
	`j¶_log
(
JSL_DBG_2
, "rpcc::call1:Åimeout\n");

273 if(
ˇ
.
d⁄e
){

274 
	`j¶_log
(
JSL_DBG_2
, "rpcc::call1:ÑeplyÑeceived\n");

279 if(
ªå™s_
 && (!
ch
 || ch->
	`isdód
())){

282 
å™smô
 = 
åue
;

284 
cuº_to
.
to
 <<= 1;

289 
Sc›edLock
 
	`ml
(&
m_
);

290 
ˇŒs_
.
	`îa£
(
ˇ
.
xid
);

294 
	`upd©e_xid_ªp
(
ˇ
.
xid
);

296 if(
de°roy_waô_
){

297 
	`VERIFY
(
	`±hªad_c⁄d_sig«l
(&
de°roy_waô_c_
) == 0);

301 i‡(
ˇ
.
d⁄e
 && 
lossyã°_
)

303 
Sc›edLock
 
	`ml
(&
m_
);

304 i‡(!
dup_ªq_
.
	`isvÆid
()) {

305 
dup_ªq_
.
buf
.
	`assign
(
ªq
.
	`c°r
(),Ñeq.
	`size
());

306 
dup_ªq_
.
xid
 = 
ˇ
.xid;

308 i‡(
xid_ªp
 > 
xid_ªp_d⁄e_
)

309 
xid_ªp_d⁄e_
 = 
xid_ªp
;

312 
Sc›edLock
 
	`ˇl
(&
ˇ
.
m
);

314 
	`j¶_log
(
JSL_DBG_2
,

316 
˛t_n⁄˚_
, 
¥oc
, 
ˇ
.
xid
, 
	`öë_¡ﬂ
(
d°_
.
sö_addr
),

317 
	`¡ohs
(
d°_
.
sö_p‹t
), 
ˇ
.
d⁄e
, ca.
öåë
);

319 if(
ch
)

320 
ch
->
	`de¸ef
();

323  (
ˇ
.
d⁄e
? ca.
öåë
 : 
Ωc_c⁄°
::
timeout_Áûuª
);

324 
	}
}

327 
	gΩcc
::
	$gë_ªfc⁄n
(
c⁄√˘i⁄
 **
ch
)

329 
Sc›edLock
 
	`ml
(&
ch™_m_
);

330 if(!
ch™_
 || ch™_->
	`isdód
()){

331 if(
ch™_
)

332 
ch™_
->
	`de¸ef
();

333 
ch™_
 = 
	`c⁄√˘_to_d°
(
d°_
, 
this
, 
lossyã°_
);

335 if(
ch
 && 
ch™_
){

336 if(*
ch
){

337 (*
ch
)->
	`de¸ef
();

339 *
ch
 = 
ch™_
;

340 (*
ch
)->
	`ö¸ef
();

342 
	}
}

349 
boﬁ


350 
	gΩcc
::
	$gŸ_pdu
(
c⁄√˘i⁄
 *
c
, *
b
, 
sz
)

352 
unm¨shÆl
 
	`ªp
(
b
, 
sz
);

353 
ª∂y_hódî
 
h
;

354 
ªp
.
	`u≈ack_ª∂y_hódî
(&
h
);

356 if(!
ªp
.
	`ok
()){

357 
	`j¶_log
(
JSL_DBG_1
, "rpcc:got_pdu unmarshall header failed!!!\n");

358  
åue
;

361 
Sc›edLock
 
	`ml
(&
m_
);

363 
	`upd©e_xid_ªp
(
h
.
xid
);

365 if(
ˇŒs_
.
	`föd
(
h
.
xid
Ë=ˇŒs_.
	`íd
()){

366 
	`j¶_log
(
JSL_DBG_2
, "Ωcc::gŸ_pdu xid %dÇÿ≥ndögÑeque°\n", 
h
.
xid
);

367  
åue
;

369 
ˇŒî
 *
ˇ
 = 
ˇŒs_
[
h
.
xid
];

371 
Sc›edLock
 
	`˛
(&
ˇ
->
m
);

372 if(!
ˇ
->
d⁄e
){

373 
ˇ
->
un
->
	`èke_ö
(
ªp
);

374 
ˇ
->
öåë
 = 
h
.
ªt
;

375 if(
ˇ
->
öåë
 < 0){

376 
	`j¶_log
(
JSL_DBG_2
, "rpcc::got_pdu: RPCÑeplyÉrror for xid %d intret %d\n",

377 
h
.
xid
, 
ˇ
->
öåë
);

379 
ˇ
->
d⁄e
 = 1;

381 
	`VERIFY
(
	`±hªad_c⁄d_brﬂdˇ°
(&
ˇ
->
c
) == 0);

382  
åue
;

383 
	}
}

387 
	gΩcc
::
	$upd©e_xid_ªp
(
xid
)

389 
°d
::
li°
<>::
ôî©‹
 
ô
;

391 if(
xid
 <
xid_ªp_wödow_
.
	`‰⁄t
()){

395 
ô
 = 
xid_ªp_wödow_
.
	`begö
(); ià!xid_ªp_wödow_.
	`íd
(); it++){

396 if(*
ô
 > 
xid
){

397 
xid_ªp_wödow_
.
	`ö£π
(
ô
, 
xid
);

398 
com¥ess
;

401 
xid_ªp_wödow_
.
	`push_back
(
xid
);

403 
com¥ess
:

404 
ô
 = 
xid_ªp_wödow_
.
	`begö
();

405 
ô
++; ià!
xid_ªp_wödow_
.
	`íd
(); it++){

406 
xid_ªp_wödow_
.
	`‰⁄t
(Ë+ 1 =*
ô
)

407 
xid_ªp_wödow_
.
	`p›_‰⁄t
();

409 
	}
}

412 
	gΩcs
::
	$Ωcs
(
p1
, 
cou¡
)

413 : 
	`p‹t_
(
p1
), 
	`cou¡ög_
(
cou¡
), 
	`cuº_cou¡s_
(cou¡), 
	`lossyã°_
(0), 
	$ªachabÀ_
 (
åue
)

415 
	`VERIFY
(
	`±hªad_muãx_öô
(&
¥ocs_m_
, 0) == 0);

416 
	`VERIFY
(
	`±hªad_muãx_öô
(&
cou¡_m_
, 0) == 0);

417 
	`VERIFY
(
	`±hªad_muãx_öô
(&
ª∂y_wödow_m_
, 0) == 0);

418 
	`VERIFY
(
	`±hªad_muãx_öô
(&
c⁄ss_m_
, 0) == 0);

420 
	`£t_ønd_£ed
();

421 
n⁄˚_
 = 
	`øndom
();

422 
	`j¶_log
(
JSL_DBG_2
, "Ωcs::Ωc†¸óãd wôhÇ⁄˚ %d\n", 
n⁄˚_
);

424 *
loss_ív
 = 
	`gëív
("RPC_LOSSY");

425 if(
loss_ív
 !
NULL
){

426 
lossyã°_
 = 
	`©oi
(
loss_ív
);

429 
	`ªg
(
Ωc_c⁄°
::
böd
, 
this
, &
Ωcs
::
Ωcböd
);

430 
di•©chpoﬁ_
 = 
√w
 
	`ThrPoﬁ
(6,
Ál£
);

432 
li°íî_
 = 
√w
 
	`t˝sc⁄n
(
this
, 
p‹t_
, 
lossyã°_
);

433 
	}
}

435 
	gΩcs
::~
	$Ωcs
()

438 
dñëe
 
li°íî_
;

439 
dñëe
 
di•©chpoﬁ_
;

440 
	`‰ì_ª∂y_wödow
();

441 
	}
}

443 
boﬁ


444 
	gΩcs
::
	$gŸ_pdu
(
c⁄√˘i⁄
 *
c
, *
b
, 
sz
)

446 if(!
ªachabÀ_
){

447 
	`j¶_log
(
JSL_DBG_1
, "rpcss::got_pdu:ÇotÑeachable\n");

448  
åue
;

451 
djob_t
 *
j
 = 
√w
 
	`djob_t
(
c
, 
b
, 
sz
);

452 
c
->
	`ö¸ef
();

453 
boﬁ
 
succ
 = 
di•©chpoﬁ_
->
	`addObjJob
(
this
, &
Ωcs
::
di•©ch
, 
j
);

454 if(!
succ
 || !
ªachabÀ_
){

455 
c
->
	`de¸ef
();

456 
dñëe
 
j
;

458  
succ
;

459 
	}
}

462 
	gΩcs
::
	$ªg1
(
¥oc
, 
h™dÀr
 *
h
)

464 
Sc›edLock
 
	`∂
(&
¥ocs_m_
);

465 
	`VERIFY
(
¥ocs_
.
	`cou¡
(
¥oc
) == 0);

466 
¥ocs_
[
¥oc
] = 
h
;

467 
	`VERIFY
(
¥ocs_
.
	`cou¡
(
¥oc
) >= 1);

468 
	}
}

471 
	gΩcs
::
	$upd©e°©
(
¥oc
)

473 
Sc›edLock
 
	`˛
(&
cou¡_m_
);

474 
cou¡s_
[
¥oc
]++;

475 
cuº_cou¡s_
--;

476 if(
cuº_cou¡s_
 == 0){

477 
°d
::
m≠
<, >::
ôî©‹
 
i
;

478 
	`¥ötf
("RPC STATS: ");

479 
i
 = 
cou¡s_
.
	`begö
(); i !cou¡s_.
	`íd
(); i++){

480 
	`¥ötf
("%x:%d ", 
i
->
fú°
, i->
£c⁄d
);

482 
	`¥ötf
("\n");

484 
Sc›edLock
 
	`rwl
(&
ª∂y_wödow_m_
);

485 
°d
::
m≠
<,°d::
li°
<
ª∂y_t
> >::
ôî©‹
 
˛t
;

487 
tŸÆªp
 = 0, 
maxªp
 = 0;

488 
˛t
 = 
ª∂y_wödow_
.
	`begö
(); c… !ª∂y_wödow_.
	`íd
(); clt++){

489 
tŸÆªp
 +
˛t
->
£c⁄d
.
	`size
();

490 if(
˛t
->
£c⁄d
.
	`size
(Ë> 
maxªp
)

491 
maxªp
 = 
˛t
->
£c⁄d
.
	`size
();

493 
	`j¶_log
(
JSL_DBG_1
, "REPLY WINDOW: clients %dÅotalÑeply %d maxÖer client %d\n",

494 (Ë
ª∂y_wödow_
.
	`size
(), 
tŸÆªp
, 
maxªp
);

495 
cuº_cou¡s_
 = 
cou¡ög_
;

497 
	}
}

500 
	gΩcs
::
	$di•©ch
(
djob_t
 *
j
)

502 
c⁄√˘i⁄
 *
c
 = 
j
->
c⁄n
;

503 
unm¨shÆl
 
	`ªq
(
j
->
buf
, j->
sz
);

504 
dñëe
 
j
;

506 
ªq_hódî
 
h
;

507 
ªq
.
	`u≈ack_ªq_hódî
(&
h
);

508 
¥oc
 = 
h
.proc;

510 if(!
ªq
.
	`ok
()){

511 
	`j¶_log
(
JSL_DBG_1
, "rpcs:dispatch unmarshall header failed!!!\n");

512 
c
->
	`de¸ef
();

516 
	`j¶_log
(
JSL_DBG_2
,

518 
h
.
xid
, 
¥oc
, h.
xid_ªp
, h.
˛t_n⁄˚
, h.
§v_n⁄˚
);

520 
m¨shÆl
 
ªp
;

521 
ª∂y_hódî
 
	`rh
(
h
.
xid
,0);

524 if(
h
.
§v_n⁄˚
 !0 && h.§v_n⁄˚ !
n⁄˚_
){

525 
	`j¶_log
(
JSL_DBG_2
,

527 
h
.
§v_n⁄˚
, 
n⁄˚_
, h.
¥oc
);

528 
rh
.
ªt
 = 
Ωc_c⁄°
::
ﬁd§v_Áûuª
;

529 
ªp
.
	`∑ck_ª∂y_hódî
(
rh
);

530 
c
->
	`£nd
(
ªp
.
	`c°r
(),ªp.
	`size
());

534 
h™dÀr
 *
f
;

537 
Sc›edLock
 
	`∂
(&
¥ocs_m_
);

538 if(
¥ocs_
.
	`cou¡
(
¥oc
) < 1){

539 
	`Ârötf
(
°dîr
, "rpcs::dispatch: unknownÖroc %x.\n",

540 
¥oc
);

541 
c
->
	`de¸ef
();

542 
	`VERIFY
(0);

546 
f
 = 
¥ocs_
[
¥oc
];

549 
Ωcs
::
Ωc°©e_t
 
°©
;

550 *
b1
;

551 
sz1
;

553 if(
h
.
˛t_n⁄˚
){

556 
Sc›edLock
 
	`rwl
(&
ª∂y_wödow_m_
);

558 if(
ª∂y_wödow_
.
	`föd
(
h
.
˛t_n⁄˚
Ë=ª∂y_wödow_.
	`íd
()){

559 
	`VERIFY
 (
ª∂y_wödow_
[
h
.
˛t_n⁄˚
].
	`size
() == 0);

560 
	`j¶_log
(
JSL_DBG_2
,

562 
h
.
˛t_n⁄˚
, h.
xid
, 
c
->
	`ch™no
(), ()
ª∂y_wödow_
.
	`size
());

568 
Sc›edLock
 
	`rwl
(&
c⁄ss_m_
);

569 if(
c⁄ns_
.
	`föd
(
h
.
˛t_n⁄˚
Ë=c⁄ns_.
	`íd
()){

570 
c
->
	`ö¸ef
();

571 
c⁄ns_
[
h
.
˛t_n⁄˚
] = 
c
;

572 } if(
c⁄ns_
[
h
.
˛t_n⁄˚
]->
	`com∑ª
(
c
) < 0){

573 
c⁄ns_
[
h
.
˛t_n⁄˚
]->
	`de¸ef
();

574 
c
->
	`ö¸ef
();

575 
c⁄ns_
[
h
.
˛t_n⁄˚
] = 
c
;

579 
°©
 = 
	`checkdu∂iˇã_™d_upd©e
(
h
.
˛t_n⁄˚
, h.
xid
,

580 
h
.
xid_ªp
, &
b1
, &
sz1
);

583 
°©
 = 
NEW
;

586 
°©
){

587 
NEW
:

588 if(
cou¡ög_
){

589 
	`upd©e°©
(
¥oc
);

592 
rh
.
ªt
 = 
f
->
	`‚
(
ªq
, 
ªp
);

593 i‡(
rh
.
ªt
 =
Ωc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
) {

594 
	`Ârötf
(
°dîr
, "rpcs::dispatch: failedÅo"

597 "Åy≥†o‡¨gumíts.\n", 
¥oc
);

598 
	`VERIFY
(0);

600 
	`VERIFY
(
rh
.
ªt
 >= 0);

602 
ªp
.
	`∑ck_ª∂y_hódî
(
rh
);

603 
ªp
.
	`èke_buf
(&
b1
,&
sz1
);

605 
	`j¶_log
(
JSL_DBG_2
,

607 
sz1
, 
h
.
xid
, 
¥oc
, 
rh
.
ªt
, h.
˛t_n⁄˚
);

609 if(
h
.
˛t_n⁄˚
 > 0){

611 
	`add_ª∂y
(
h
.
˛t_n⁄˚
, h.
xid
, 
b1
, 
sz1
);

616 
Sc›edLock
 
	`rwl
(&
c⁄ss_m_
);

617 if(
c
->
	`isdód
(Ë&& c !
c⁄ns_
[
h
.
˛t_n⁄˚
]){

618 
c
->
	`de¸ef
();

619 
c
 = 
c⁄ns_
[
h
.
˛t_n⁄˚
];

620 
c
->
	`ö¸ef
();

624 
c
->
	`£nd
(
b1
, 
sz1
);

625 if(
h
.
˛t_n⁄˚
 == 0){

627 
	`‰ì
(
b1
);

630 
INPROGRESS
:

632 
DONE
:

633 
c
->
	`£nd
(
b1
, 
sz1
);

635 
FORGOTTEN
:

636 
	`j¶_log
(
JSL_DBG_2
, "rpcs::dispatch: very oldÑequest %u from %u\n",

637 
h
.
xid
, h.
˛t_n⁄˚
);

638 
rh
.
ªt
 = 
Ωc_c⁄°
::
©mo°⁄˚_Áûuª
;

639 
ªp
.
	`∑ck_ª∂y_hódî
(
rh
);

640 
c
->
	`£nd
(
ªp
.
	`c°r
(),ªp.
	`size
());

643 
c
->
	`de¸ef
();

644 
	}
}

660 
	gΩcs
::
Ωc°©e_t


661 
Ωcs
::
	$checkdu∂iˇã_™d_upd©e
(
˛t_n⁄˚
, 
xid
,

662 
xid_ªp
, **
b
, *
sz
)

664 
Sc›edLock
 
	`rwl
(&
ª∂y_wödow_m_
);

667  
NEW
;

668 
	}
}

676 
	gΩcs
::
	$add_ª∂y
(
˛t_n⁄˚
, 
xid
,

677 *
b
, 
sz
)

679 
Sc›edLock
 
	`rwl
(&
ª∂y_wödow_m_
);

681 
	}
}

684 
	gΩcs
::
	$‰ì_ª∂y_wödow
()

686 
°d
::
m≠
<,°d::
li°
<
ª∂y_t
> >::
ôî©‹
 
˛t
;

687 
°d
::
li°
<
ª∂y_t
>::
ôî©‹
 
ô
;

689 
Sc›edLock
 
	`rwl
(&
ª∂y_wödow_m_
);

690 
˛t
 = 
ª∂y_wödow_
.
	`begö
(); c… !ª∂y_wödow_.
	`íd
(); clt++){

691 
ô
 = 
˛t
->
£c⁄d
.
	`begö
(); ià!˛t->£c⁄d.
	`íd
(); it++){

692 
	`‰ì
((*
ô
).
buf
);

694 
˛t
->
£c⁄d
.
	`˛ór
();

696 
ª∂y_wödow_
.
	`˛ór
();

697 
	}
}

701 
	gΩcs
::
	$Ωcböd
(
a
, &
r
)

703 
	`j¶_log
(
JSL_DBG_2
, "Ωcs::Ωcböd cÆÀdÑëu∫Ç⁄˚ %u\n", 
n⁄˚_
);

704 
r
 = 
n⁄˚_
;

706 
	}
}

709 
	gm¨shÆl
::
	$øwbyã
(
x
)

711 if(
_öd
 >
_ˇ∑
){

712 
_ˇ∑
 *= 2;

713 
	`VERIFY
 (
_buf
 !
NULL
);

714 
_buf
 = (*)
	`ªÆloc
(_buf, 
_ˇ∑
);

715 
	`VERIFY
(
_buf
);

717 
_buf
[
_öd
++] = 
x
;

718 
	}
}

721 
	gm¨shÆl
::
	$øwbyãs
(c⁄° *
p
, 
n
)

723 if((
_öd
+
n
Ë> 
_ˇ∑
){

724 
_ˇ∑
 = _ˇ∑ > 
n
? 2*_capa:(_capa+n);

725 
	`VERIFY
 (
_buf
 !
NULL
);

726 
_buf
 = (*)
	`ªÆloc
(_buf, 
_ˇ∑
);

727 
	`VERIFY
(
_buf
);

729 
	`mem˝y
(
_buf
+
_öd
, 
p
, 
n
);

730 
_öd
 +
n
;

731 
	}
}

733 
	gm¨shÆl
 &

734 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
boﬁ
 
	gx
)

736 
	gm
.
øwbyã
(
x
);

737  
	gm
;

740 
	gm¨shÆl
 &

741 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	gx
)

743 
	gm
.
øwbyã
(
x
);

744  
	gm
;

747 
	gm¨shÆl
 &

748 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	gx
)

750 
	gm
 << (Ë
	gx
;

751  
	gm
;

755 
	gm¨shÆl
 &

756 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	gx
)

758 
	gm
.
øwbyã
((
x
 >> 8) & 0xff);

759 
	gm
.
øwbyã
(
x
 & 0xff);

760  
	gm
;

763 
	gm¨shÆl
 &

764 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	gx
)

766 
	gm
 << (Ë
	gx
;

767  
	gm
;

770 
	gm¨shÆl
 &

771 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	gx
)

774 
	gm
.
øwbyã
((
x
 >> 24) & 0xff);

775 
	gm
.
øwbyã
((
x
 >> 16) & 0xff);

776 
	gm
.
øwbyã
((
x
 >> 8) & 0xff);

777 
	gm
.
øwbyã
(
x
 & 0xff);

778  
	gm
;

781 
	gm¨shÆl
 &

782 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	gx
)

784 
	gm
 << (Ë
	gx
;

785  
	gm
;

788 
	gm¨shÆl
 &

789 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, c⁄° 
	g°d
::
°rög
 &
s
)

791 
m
 << (Ë
s
.
size
();

792 
	gm
.
øwbyãs
(
s
.
d©a
(), s.
size
());

793  
	gm
;

796 
	gm¨shÆl
 &

797 
	g›î©‹
<<(
	gm¨shÆl
 &
	gm
, 
	gx
)

799 
	gm
 << (Ë(
	gx
 >> 32);

800 
	gm
 << (Ë
	gx
;

801  
	gm
;

805 
	gm¨shÆl
::
	$∑ck
(
x
)

807 
	`øwbyã
((
x
 >> 24) & 0xff);

808 
	`øwbyã
((
x
 >> 16) & 0xff);

809 
	`øwbyã
((
x
 >> 8) & 0xff);

810 
	`øwbyã
(
x
 & 0xff);

811 
	}
}

814 
	gunm¨shÆl
::
	$u≈ack
(*
x
)

816 (*
x
Ë(
	`øwbyã
() & 0xff) << 24;

817 (*
x
Ë|(
	`øwbyã
() & 0xff) << 16;

818 (*
x
Ë|(
	`øwbyã
() & 0xff) << 8;

819 (*
x
Ë|
	`øwbyã
() & 0xff;

820 
	}
}

824 
	gunm¨shÆl
::
	$èke_ö
(
unm¨shÆl
 &
™Ÿhî
)

826 if(
_buf
)

827 
	`‰ì
(
_buf
);

828 
™Ÿhî
.
	`èke_buf
(&
_buf
, &
_sz
);

829 
_öd
 = 
RPC_HEADER_SZ
;

830 
_ok
 = 
_sz
 >
RPC_HEADER_SZ
?
åue
:
Ál£
;

831 
	}
}

833 
boﬁ


834 
	gunm¨shÆl
::
	$okd⁄e
()

836 if(
	`ok
(Ë&& 
_öd
 =
_sz
){

837  
åue
;

839  
Ál£
;

841 
	}
}

844 
	gunm¨shÆl
::
	$øwbyã
()

846 
c
 = 0;

847 if(
_öd
 >
_sz
)

848 
_ok
 = 
Ál£
;

850 
c
 = 
_buf
[
_öd
++];

851  
c
;

852 
	}
}

854 
	gunm¨shÆl
 &

855 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, 
	gboﬁ
 &
	gx
)

857 
	gx
 = (
boﬁ
Ë
u
.
øwbyã
() ;

858  
	gu
;

861 
	gunm¨shÆl
 &

862 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, &
	gx
)

864 
	gx
 = (Ë
u
.
øwbyã
() ;

865  
	gu
;

868 
	gunm¨shÆl
 &

869 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, &
	gx
)

871 
	gx
 = (Ë
u
.
øwbyã
();

872  
	gu
;

876 
	gunm¨shÆl
 &

877 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, &
	gx
)

879 
	gx
 = (
u
.
øwbyã
() & 0xff) << 8;

880 
	gx
 |
u
.
øwbyã
() & 0xff;

881  
	gu
;

884 
	gunm¨shÆl
 &

885 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, &
	gx
)

887 
	gx
 = (
u
.
øwbyã
() & 0xff) << 8;

888 
	gx
 |
u
.
øwbyã
() & 0xff;

889  
	gu
;

892 
	gunm¨shÆl
 &

893 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, &
	gx
)

895 
	gx
 = (
u
.
øwbyã
() & 0xff) << 24;

896 
	gx
 |(
u
.
øwbyã
() & 0xff) << 16;

897 
	gx
 |(
u
.
øwbyã
() & 0xff) << 8;

898 
	gx
 |
u
.
øwbyã
() & 0xff;

899  
	gu
;

902 
	gunm¨shÆl
 &

903 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, &
	gx
)

905 
	gx
 = (
u
.
øwbyã
() & 0xff) << 24;

906 
	gx
 |(
u
.
øwbyã
() & 0xff) << 16;

907 
	gx
 |(
u
.
øwbyã
() & 0xff) << 8;

908 
	gx
 |
u
.
øwbyã
() & 0xff;

909  
	gu
;

912 
	gunm¨shÆl
 &

913 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, &
	gx
)

915 
	gh
, 
	gl
;

916 
	gu
 >> 
	gh
;

917 
	gu
 >> 
	gl
;

918 
	gx
 = 
l
 | ((Ë
h
 << 32);

919  
	gu
;

922 
	gunm¨shÆl
 &

923 
	g›î©‹
>>(
	gunm¨shÆl
 &
	gu
, 
	g°d
::
°rög
 &
s
)

925 
sz
;

926 
	gu
 >> 
	gsz
;

927 if(
	gu
.
ok
())

928 
	gu
.
øwbyãs
(
s
, 
sz
);

929  
	gu
;

933 
	gunm¨shÆl
::
øwbyãs
(
°d
::
°rög
 &
ss
, 
n
)

935 if((
	g_öd
+
	gn
Ë> ()
	g_sz
){

936 
	g_ok
 = 
Ál£
;

938 
	g°d
::
°rög
 
tmps
 = 
°d
::°rög(
_buf
+
_öd
, 
n
);

939 
sw≠
(
ss
, 
tmps
);

940 
VERIFY
(
ss
.
size
(Ë=
n
);

941 
	g_öd
 +
n
;

945 
boﬁ
 
	g›î©‹
<(c⁄° 
	gsockaddr_ö
 &
	ga
, c⁄° sockaddr_ö &
	gb
){

946  ((
	ga
.
	gsö_addr
.
	gs_addr
 < 
	gb
.sin_addr.s_addr) ||

947 ((
	ga
.
	gsö_addr
.
	gs_addr
 =
b
.
sö_addr
.
s_addr
) &&

948 ((
a
.
sö_p‹t
 < 
b
.sin_port))));

953 
	$make_sockaddr
(c⁄° *
ho°™dp‹t
, 
sockaddr_ö
 *
d°
){

955 
ho°
[200];

956 c⁄° *
loˇlho°
 = "127.0.0.1";

957 c⁄° *
p‹t
 = 
	`ödex
(
ho°™dp‹t
, ':');

958 if(
p‹t
 =
NULL
){

959 
	`mem˝y
(
ho°
, 
loˇlho°
, 
	`°æí
(localhost)+1);

960 
p‹t
 = 
ho°™dp‹t
;

962 
	`mem˝y
(
ho°
, 
ho°™dp‹t
, 
p‹t
-hostandport);

963 
ho°
[
p‹t
-
ho°™dp‹t
] = '\0';

964 
p‹t
++;

967 
	`make_sockaddr
(
ho°
, 
p‹t
, 
d°
);

969 
	}
}

972 
	$make_sockaddr
(c⁄° *
ho°
, c⁄° *
p‹t
, 
sockaddr_ö
 *
d°
){

974 
ö_addr_t
 
a
;

976 
	`bzîo
(
d°
, (*dst));

977 
d°
->
sö_Ámûy
 = 
AF_INET
;

979 
a
 = 
	`öë_addr
(
ho°
);

980 if(
a
 !
INADDR_NONE
){

981 
d°
->
sö_addr
.
s_addr
 = 
a
;

983 
ho°ít
 *
hp
 = 
	`gëho°by«me
(
ho°
);

984 if(
hp
 =0 || hp->
h_Àngth
 != 4){

985 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ föd ho°Çamê%s\n", 
ho°
);

986 
	`exô
(1);

988 
d°
->
sö_addr
.
s_addr
 = ((
ö_addr
 *)(
hp
->
h_addr
))->s_addr;

990 
d°
->
sö_p‹t
 = 
	`ht⁄s
(
	`©oi
(
p‹t
));

991 
	}
}

994 
	$cmp_time•ec
(c⁄° 
time•ec
 &
a
, c⁄° time•e¯&
b
)

996 if(
a
.
tv_£c
 > 
b
.tv_sec)

998 if(
a
.
tv_£c
 < 
b
.tv_sec)

1001 if(
a
.
tv_n£c
 > 
b
.tv_nsec)

1003 if(
a
.
tv_n£c
 < 
b
.tv_nsec)

1008 
	}
}

1011 
	$add_time•ec
(c⁄° 
time•ec
 &
a
, 
b
, time•e¯*
ªsu…
)

1014 
ªsu…
->
tv_£c
 = 
a
.tv_£¯+ 
b
/1000;

1015 
ªsu…
->
tv_n£c
 = 
a
.tv_n£¯+ (
b
 % 1000) * 1000000;

1016 
	`VERIFY
(
ªsu…
->
tv_n£c
 >= 0);

1017 
ªsu…
->
tv_n£c
 > 1000000000){

1018 
ªsu…
->
tv_£c
++;

1019 
ªsu…
->
tv_n£c
-=1000000000;

1021 
	}
}

1024 
	$diff_time•ec
(c⁄° 
time•ec
 &
íd
, c⁄° time•e¯&
°¨t
)

1026 
diff
 = (
íd
.
tv_£c
 > 
°¨t
.tv_sec)?(end.tv_sec-start.tv_sec)*1000:0;

1027 
	`VERIFY
(
diff
 || 
íd
.
tv_£c
 =
°¨t
.tv_sec);

1028 if(
íd
.
tv_n£c
 > 
°¨t
.tv_nsec){

1029 
diff
 +(
íd
.
tv_n£c
-
°¨t
.tv_nsec)/1000000;

1031 
diff
 -(
°¨t
.
tv_n£c
-
íd
.tv_nsec)/1000000;

1033  
diff
;

1034 
	}
}

	@rpc/rpc.h

1 #i‚de‡
Ωc_h


2 
	#Ωc_h


	)

4 
	~<sys/sockë.h
>

5 
	~<√töë/ö.h
>

6 
	~<li°
>

7 
	~<m≠
>

8 
	~<°dio.h
>

10 
	~"thr_poﬁ.h
"

11 
	~"m¨shÆl.h
"

12 
	~"c⁄√˘i⁄.h
"

14 #ifde‡
DMALLOC


15 
	~"dmÆloc.h
"

18 ˛as†
	cΩc_c⁄°
 {

19 
	mpublic
:

20 c⁄° 
böd
 = 1;

21 c⁄° 
	mtimeout_Áûuª
 = -1;

22 c⁄° 
	munm¨shÆ_¨gs_Áûuª
 = -2;

23 c⁄° 
	munm¨shÆ_ª∂y_Áûuª
 = -3;

24 c⁄° 
	m©mo°⁄˚_Áûuª
 = -4;

25 c⁄° 
	mﬁd§v_Áûuª
 = -5;

26 c⁄° 
	mböd_Áûuª
 = -6;

27 c⁄° 
	mˇn˚l_Áûuª
 = -7;

33 ˛as†
	cΩcc
 : 
public
 
ch™mgr
 {

35 
¥iv©e
:

38 
	sˇŒî
 {

39 
ˇŒî
(
xxid
, 
unm¨shÆl
 *
un
);

40 ~
ˇŒî
();

42 
	mxid
;

43 
unm¨shÆl
 *
	mun
;

44 
	möåë
;

45 
boﬁ
 
	md⁄e
;

46 
±hªad_muãx_t
 
	mm
;

47 
±hªad_c⁄d_t
 
	mc
;

50 
gë_ªfc⁄n
(
c⁄√˘i⁄
 **
ch
);

51 
upd©e_xid_ªp
(
xid
);

54 
sockaddr_ö
 
	gd°_
;

55 
	g˛t_n⁄˚_
;

56 
	g§v_n⁄˚_
;

57 
boﬁ
 
	gböd_d⁄e_
;

58 
	gxid_
;

59 
	glossyã°_
;

60 
boﬁ
 
	gªå™s_
;

61 
boﬁ
 
	gªachabÀ_
;

63 
c⁄√˘i⁄
 *
	gch™_
;

65 
±hªad_muãx_t
 
	gm_
;

66 
±hªad_muãx_t
 
	gch™_m_
;

68 
boﬁ
 
	gde°roy_waô_
;

69 
±hªad_c⁄d_t
 
	gde°roy_waô_c_
;

71 
	g°d
::
m≠
<, 
	gˇŒî
 *> 
	gˇŒs_
;

72 
	g°d
::
li°
<> 
xid_ªp_wödow_
;

74 
	sªque°
 {

75 
ªque°
(Ë{ 
˛ór
(); }

76 
˛ór
(Ë{ 
	gbuf
.˛ór(); 
	gxid
 = -1; }

77 
boﬁ
 
isvÆid
(Ë{  
	gxid
 != -1; }

78 
	g°d
::
°rög
 
buf
;

79 
	gxid
;

81 
ªque°
 
	gdup_ªq_
;

82 
	gxid_ªp_d⁄e_
;

83 
	gpublic
:

85 
Ωcc
(
sockaddr_ö
 
d
, 
boﬁ
 
ªå™s
=
åue
);

86 ~
Ωcc
();

88 
	sTO
 {

89 
	gto
;

91 c⁄° 
TO
 
	gto_max
;

92 c⁄° 
TO
 
	gto_mö
;

93 
TO
 
	$to
(
x
Ë{ 
TO
 
t
;Å.
to
 = x; Å;
	}
}

95 
	$id
(Ë{  
˛t_n⁄˚_
; 
	}
}

97 
böd
(
TO
 
to
 = 
to_max
);

99 
	$£t_ªachabÀ
(
boﬁ
 
r
Ë{ 
ªachabÀ_
 =Ñ; 
	}
}

101 
ˇn˚l
();

103 
	$i¶ossy
(Ë{  
lossyã°_
 > 0; 
	}
}

105 
ˇŒ1
(
¥oc
,

106 
m¨shÆl
 &
ªq
, 
unm¨shÆl
 &
ªp
, 
TO
 
to
);

108 
boﬁ
 
gŸ_pdu
(
c⁄√˘i⁄
 *
c
, *
b
, 
sz
);

111 
	gãm∂©e
<
˛ass
 
	gR
>

112 
ˇŒ_m
(
¥oc
, 
m¨shÆl
 &
ªq
, 
R
 & 
r
, 
TO
 
to
);

114 
	gãm∂©e
<
˛ass
 
	gR
>

115 
ˇŒ
(
¥oc
, 
R
 & 
r
, 
TO
 
to
 = 
to_max
);

116 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
>

117 
ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, 
R
 & 
r
, 
TO
 
to
 = 
to_max
);

118 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
>

119 
ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
, 
R
 & 
r
,

120 
TO
 
to
 = 
to_max
);

121 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
>

122 
ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
, c⁄° 
A3
 & 
a3
,

123 
R
 & 
r
, 
TO
 
to
 = 
to_max
);

124 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
>

125 
ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
, c⁄° 
A3
 & 
a3
,

126 c⁄° 
A4
 & 
a4
, 
R
 & 
r
, 
TO
 
to
 = 
to_max
);

127 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
>

128 
ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
, c⁄° 
A3
 & 
a3
,

129 c⁄° 
A4
 & 
a4
, c⁄° 
A5
 & 
a5
, 
R
 & 
r
, 
TO
 
to
 = 
to_max
);

130 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
,

131 
˛ass
 
	gA6
>

132 
ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
, c⁄° 
A3
 & 
a3
,

133 c⁄° 
A4
 & 
a4
, c⁄° 
A5
 & 
a5
, c⁄° 
A6
 & 
a6
,

134 
R
 & 
r
, 
TO
 
to
 = 
to_max
);

135 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
,

136 
˛ass
 
	gA6
, cœs†
	gA7
>

137 
ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
, c⁄° 
A3
 & 
a3
,

138 c⁄° 
A4
 & 
a4
, c⁄° 
A5
 & 
a5
, c⁄° 
A6
 &
a6
, c⁄° 
A7
 &
a7
,

139 
R
 & 
r
, 
TO
 
to
 = 
to_max
);

143 
	gãm∂©e
<
˛ass
 
	gR
> 

144 
	gΩcc
::
	$ˇŒ_m
(
¥oc
, 
m¨shÆl
 &
ªq
, 
R
 & 
r
, 
TO
 
to
)

146 
unm¨shÆl
 
u
;

147 
öåë
 = 
	`ˇŒ1
(
¥oc
, 
ªq
, 
u
, 
to
);

148 i‡(
öåë
 < 0)  intret;

149 
u
 >> 
r
;

150 if(
u
.
	`okd⁄e
(Ë!
åue
) {

151 
	`Ârötf
(
°dîr
, "rpcc::call_m: failedÅo unmarshallÅheÑeply."

153 "ty≥.\n", 
¥oc
);

154 
	`VERIFY
(0);

155  
Ωc_c⁄°
::
unm¨shÆ_ª∂y_Áûuª
;

157  
öåë
;

158 
	}
}

160 
	gãm∂©e
<
˛ass
 
	gR
> 

161 
	gΩcc
::
	$ˇŒ
(
¥oc
, 
R
 & 
r
, 
TO
 
to
)

163 
m¨shÆl
 
m
;

164  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

165 
	}
}

167 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
> 

168 
	gΩcc
::
	$ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, 
R
 & 
r
, 
TO
 
to
)

170 
m¨shÆl
 
m
;

171 
m
 << 
a1
;

172  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

173 
	}
}

175 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
> 

176 
	gΩcc
::
	$ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
,

177 
R
 & 
r
, 
TO
 
to
)

179 
m¨shÆl
 
m
;

180 
m
 << 
a1
;

181 
m
 << 
a2
;

182  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

183 
	}
}

185 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
> 

186 
	gΩcc
::
	$ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
,

187 c⁄° 
A3
 & 
a3
, 
R
 & 
r
, 
TO
 
to
)

189 
m¨shÆl
 
m
;

190 
m
 << 
a1
;

191 
m
 << 
a2
;

192 
m
 << 
a3
;

193  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

194 
	}
}

196 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
> 

197 
	gΩcc
::
	$ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
,

198 c⁄° 
A3
 & 
a3
, c⁄° 
A4
 & 
a4
, 
R
 & 
r
, 
TO
 
to
)

200 
m¨shÆl
 
m
;

201 
m
 << 
a1
;

202 
m
 << 
a2
;

203 
m
 << 
a3
;

204 
m
 << 
a4
;

205  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

206 
	}
}

208 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
> 

209 
	gΩcc
::
	$ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
,

210 c⁄° 
A3
 & 
a3
, c⁄° 
A4
 & 
a4
, c⁄° 
A5
 & 
a5
, 
R
 & 
r
, 
TO
 
to
)

212 
m¨shÆl
 
m
;

213 
m
 << 
a1
;

214 
m
 << 
a2
;

215 
m
 << 
a3
;

216 
m
 << 
a4
;

217 
m
 << 
a5
;

218  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

219 
	}
}

221 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
,

222 
˛ass
 
	gA6
> 

223 
	gΩcc
::
	$ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
,

224 c⁄° 
A3
 & 
a3
, c⁄° 
A4
 & 
a4
, c⁄° 
A5
 & 
a5
,

225 c⁄° 
A6
 & 
a6
, 
R
 & 
r
, 
TO
 
to
)

227 
m¨shÆl
 
m
;

228 
m
 << 
a1
;

229 
m
 << 
a2
;

230 
m
 << 
a3
;

231 
m
 << 
a4
;

232 
m
 << 
a5
;

233 
m
 << 
a6
;

234  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

235 
	}
}

237 
	gãm∂©e
<
˛ass
 
	gR
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
,

238 
˛ass
 
	gA6
, cœs†
	gA7
> 

239 
	gΩcc
::
	$ˇŒ
(
¥oc
, c⁄° 
A1
 & 
a1
, c⁄° 
A2
 & 
a2
,

240 c⁄° 
A3
 & 
a3
, c⁄° 
A4
 & 
a4
, c⁄° 
A5
 & 
a5
,

241 c⁄° 
A6
 & 
a6
, c⁄° 
A7
 & 
a7
,

242 
R
 & 
r
, 
TO
 
to
)

244 
m¨shÆl
 
m
;

245 
m
 << 
a1
;

246 
m
 << 
a2
;

247 
m
 << 
a3
;

248 
m
 << 
a4
;

249 
m
 << 
a5
;

250 
m
 << 
a6
;

251 
m
 << 
a7
;

252  
	`ˇŒ_m
(
¥oc
, 
m
, 
r
, 
to
);

253 
	}
}

255 
boﬁ
 
	g›î©‹
<(c⁄° 
	gsockaddr_ö
 &
	ga
, c⁄° sockaddr_ö &
	gb
);

257 ˛as†
	ch™dÀr
 {

258 
	mpublic
:

259 
	$h™dÀr
() { }

260 
vútuÆ
 ~
	$h™dÀr
(Ë{ 
	}
}

261 
vútuÆ
 
‚
(
unm¨shÆl
 &, 
m¨shÆl
 &) = 0;

266 ˛as†
	cΩcs
 : 
public
 
ch™mgr
 {

269 
NEW
,

270 
	mINPROGRESS
,

271 
	mDONE
,

272 
	mFORGOTTEN
,

273 } 
	tΩc°©e_t
;

275 
	g¥iv©e
:

281 
	sª∂y_t
 {

282 
ª∂y_t
 (
_xid
) {

283 
xid
 = 
_xid
;

284 
	gcb_¥e£¡
 = 
Ál£
;

285 
	gbuf
 = 
NULL
;

286 
	gsz
 = 0;

288 
	gxid
;

289 
boﬁ
 
	gcb_¥e£¡
;

290 *
	gbuf
;

291 
	gsz
;

294 
	gp‹t_
;

295 
	gn⁄˚_
;

300 
	g°d
::
m≠
<, std::
li°
<
ª∂y_t
> > 
ª∂y_wödow_
;

302 
‰ì_ª∂y_wödow
();

303 
add_ª∂y
(
˛t_n⁄˚
, 
xid
, *
b
, 
sz
);

305 
Ωc°©e_t
 
checkdu∂iˇã_™d_upd©e
(
˛t_n⁄˚
,

306 
xid
, 
ªp_xid
,

307 **
b
, *
sz
);

309 
upd©e°©
(
¥oc
);

312 
	g°d
::
m≠
<, 
	gc⁄√˘i⁄
 *> 
	gc⁄ns_
;

315 c⁄° 
	gcou¡ög_
;

316 
	gcuº_cou¡s_
;

317 
	g°d
::
m≠
<, > 
	gcou¡s_
;

319 
	glossyã°_
;

320 
boﬁ
 
	gªachabÀ_
;

323 
	g°d
::
m≠
<, 
	gh™dÀr
 *> 
	g¥ocs_
;

325 
±hªad_muãx_t
 
	g¥ocs_m_
;

326 
±hªad_muãx_t
 
	gcou¡_m_
;

327 
±hªad_muãx_t
 
	gª∂y_wödow_m_
;

328 
±hªad_muãx_t
 
	gc⁄ss_m_
;

331 
	g¥Ÿe˘ed
:

333 
	sdjob_t
 {

334 
djob_t
 (
c⁄√˘i⁄
 *
c
, *
b
, 
bsz
):
buf
(b),
sz
(bsz),
c⁄n
(c) {}

335 *
	gbuf
;

336 
	gsz
;

337 
c⁄√˘i⁄
 *
	gc⁄n
;

339 
di•©ch
(
djob_t
 *);

342 
ªg1
(
¥oc
, 
h™dÀr
 *);

344 
ThrPoﬁ
* 
	gdi•©chpoﬁ_
;

345 
t˝sc⁄n
* 
	gli°íî_
;

347 
	gpublic
:

348 
Ωcs
(
p‹t
, 
cou¡s
=0);

349 ~
Ωcs
();

352 
Ωcböd
(
a
, &
r
);

354 
	$£t_ªachabÀ
(
boﬁ
 
r
Ë{ 
ªachabÀ_
 =Ñ; 
	}
}

356 
boﬁ
 
gŸ_pdu
(
c⁄√˘i⁄
 *
c
, *
b
, 
sz
);

359 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gR
>

360 
ªg
(
¥oc
, 
S
*, (S::*
mëh
)(c⁄° 
A1
 
a1
, 
R
 & 
r
));

361 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gR
>

362 
ªg
(
¥oc
, 
S
*, (S::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
,

363 
R
 & 
r
));

364 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gR
>

365 
ªg
(
¥oc
, 
S
*, (S::*
mëh
)(c⁄° 
A1
, c⁄° 
A2
,

366 c⁄° 
A3
, 
R
 & 
r
));

367 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gR
>

368 
ªg
(
¥oc
, 
S
*, (S::*
mëh
)(c⁄° 
A1
, c⁄° 
A2
,

369 c⁄° 
A3
, c⁄° 
A4
, 
R
 & 
r
));

370 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
, cœs†
	gR
>

371 
ªg
(
¥oc
, 
S
*, (S::*
mëh
)(c⁄° 
A1
, c⁄° 
A2
,

372 c⁄° 
A3
, c⁄° 
A4
, c⁄° 
A5
,

373 
R
 & 
r
));

374 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
, cœs†
	gA6
,

375 
˛ass
 
	gR
>

376 
ªg
(
¥oc
, 
S
*, (S::*
mëh
)(c⁄° 
A1
, c⁄° 
A2
,

377 c⁄° 
A3
, c⁄° 
A4
, c⁄° 
A5
,

378 c⁄° 
A6
, 
R
 & 
r
));

379 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
, cœs†
	gA6
,

380 
˛ass
 
	gA7
, cœs†
	gR
>

381 
ªg
(
¥oc
, 
S
*, (S::*
mëh
)(c⁄° 
A1
, c⁄° 
A2
,

382 c⁄° 
A3
, c⁄° 
A4
, c⁄° 
A5
,

383 c⁄° 
A6
, c⁄° 
A7
,

384 
R
 & 
r
));

387 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gR
> 

388 
	gΩcs
::
ªg
(
¥oc
, 
S
*
sob
, (S::*
mëh
)(c⁄° 
A1
 
a1
, 
R
 & 
r
))

390 ˛as†
	ch1
 : 
public
 
h™dÀr
 {

391 
¥iv©e
:

392 
S
 * 
sob
;

393 (
	gS
::*
mëh
)(c⁄° 
A1
 
a1
, 
	gR
 & 
	gr
);

394 
	gpublic
:

395 
h1
(
S
 *
xsob
, (S::*
xmëh
)(c⁄° 
A1
 
a1
, 
R
 & 
r
))

396 : 
sob
(
xsob
), 
mëh
(
xmëh
) { }

397 
‚
(
unm¨shÆl
 &
¨gs
, 
m¨shÆl
 &
ªt
) {

398 
A1
 
	ga1
;

399 
R
 
	gr
;

400 
	g¨gs
 >> 
	ga1
;

401 if(!
	g¨gs
.
okd⁄e
())

402  
	gΩc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
;

403 
	gb
 = (
sob
->*
mëh
)(
a1
, 
	gr
);

404 
	gªt
 << 
	gr
;

405  
	gb
;

408 
ªg1
(
¥oc
, 
√w
 
h1
(
sob
, 
mëh
));

411 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gR
> 

412 
	gΩcs
::
ªg
(
¥oc
, 
S
*
sob
, (S::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
,

413 
R
 & 
r
))

415 ˛as†
	ch1
 : 
public
 
h™dÀr
 {

416 
¥iv©e
:

417 
S
 * 
sob
;

418 (
	gS
::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
	ga2
, 
	gR
 & 
	gr
);

419 
	gpublic
:

420 
h1
(
S
 *
xsob
, (S::*
xmëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
, 
R
 & 
r
))

421 : 
sob
(
xsob
), 
mëh
(
xmëh
) { }

422 
‚
(
unm¨shÆl
 &
¨gs
, 
m¨shÆl
 &
ªt
) {

423 
A1
 
	ga1
;

424 
A2
 
	ga2
;

425 
R
 
	gr
;

426 
	g¨gs
 >> 
	ga1
;

427 
	g¨gs
 >> 
	ga2
;

428 if(!
	g¨gs
.
okd⁄e
())

429  
	gΩc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
;

430 
	gb
 = (
sob
->*
mëh
)(
a1
, 
	ga2
, 
	gr
);

431 
	gªt
 << 
	gr
;

432  
	gb
;

435 
ªg1
(
¥oc
, 
√w
 
h1
(
sob
, 
mëh
));

438 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gR
> 

439 
	gΩcs
::
ªg
(
¥oc
, 
S
*
sob
, (S::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
,

440 c⁄° 
A3
 
a3
, 
R
 & 
r
))

442 ˛as†
	ch1
 : 
public
 
h™dÀr
 {

443 
¥iv©e
:

444 
S
 * 
sob
;

445 (
	gS
::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
	ga2
, c⁄° 
A3
 
	ga3
, 
	gR
 & 
	gr
);

446 
	gpublic
:

447 
h1
(
S
 *
xsob
, (S::*
xmëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
, c⁄° 
A3
 
a3
, 
R
 & 
r
))

448 : 
sob
(
xsob
), 
mëh
(
xmëh
) { }

449 
‚
(
unm¨shÆl
 &
¨gs
, 
m¨shÆl
 &
ªt
) {

450 
A1
 
	ga1
;

451 
A2
 
	ga2
;

452 
A3
 
	ga3
;

453 
R
 
	gr
;

454 
	g¨gs
 >> 
	ga1
;

455 
	g¨gs
 >> 
	ga2
;

456 
	g¨gs
 >> 
	ga3
;

457 if(!
	g¨gs
.
okd⁄e
())

458  
	gΩc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
;

459 
	gb
 = (
sob
->*
mëh
)(
a1
, 
	ga2
, 
	ga3
, 
	gr
);

460 
	gªt
 << 
	gr
;

461  
	gb
;

464 
ªg1
(
¥oc
, 
√w
 
h1
(
sob
, 
mëh
));

467 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gR
> 

468 
	gΩcs
::
ªg
(
¥oc
, 
S
*
sob
, (S::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
,

469 c⁄° 
A3
 
a3
, c⁄° 
A4
 
a4
,

470 
R
 & 
r
))

472 ˛as†
	ch1
 : 
public
 
h™dÀr
 {

473 
¥iv©e
:

474 
S
 * 
sob
;

475 (
	gS
::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
	ga2
, c⁄° 
A3
 
	ga3
, c⁄° 
A4
 
	ga4
, 
	gR
 & 
	gr
);

476 
	gpublic
:

477 
h1
(
S
 *
xsob
, (S::*
xmëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
, c⁄° 
A3
 
a3
,

478 c⁄° 
A4
 
a4
, 
R
 & 
r
))

479 : 
sob
(
xsob
), 
mëh
(
xmëh
) { }

480 
‚
(
unm¨shÆl
 &
¨gs
, 
m¨shÆl
 &
ªt
) {

481 
A1
 
	ga1
;

482 
A2
 
	ga2
;

483 
A3
 
	ga3
;

484 
A4
 
	ga4
;

485 
R
 
	gr
;

486 
	g¨gs
 >> 
	ga1
;

487 
	g¨gs
 >> 
	ga2
;

488 
	g¨gs
 >> 
	ga3
;

489 
	g¨gs
 >> 
	ga4
;

490 if(!
	g¨gs
.
okd⁄e
())

491  
	gΩc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
;

492 
	gb
 = (
sob
->*
mëh
)(
a1
, 
	ga2
, 
	ga3
, 
	ga4
, 
	gr
);

493 
	gªt
 << 
	gr
;

494  
	gb
;

497 
ªg1
(
¥oc
, 
√w
 
h1
(
sob
, 
mëh
));

500 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
, cœs†
	gR
> 

501 
	gΩcs
::
ªg
(
¥oc
, 
S
*
sob
, (S::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
,

502 c⁄° 
A3
 
a3
, c⁄° 
A4
 
a4
,

503 c⁄° 
A5
 
a5
, 
R
 & 
r
))

505 ˛as†
	ch1
 : 
public
 
h™dÀr
 {

506 
¥iv©e
:

507 
S
 * 
sob
;

508 (
	gS
::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
	ga2
, c⁄° 
A3
 
	ga3
, c⁄° 
A4
 
	ga4
,

509 c⁄° 
A5
 
	ga5
, 
	gR
 & 
	gr
);

510 
	gpublic
:

511 
h1
(
S
 *
xsob
, (S::*
xmëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
, c⁄° 
A3
 
a3
,

512 c⁄° 
A4
 
a4
, c⁄° 
A5
 
a5
, 
R
 & 
r
))

513 : 
sob
(
xsob
), 
mëh
(
xmëh
) { }

514 
‚
(
unm¨shÆl
 &
¨gs
, 
m¨shÆl
 &
ªt
) {

515 
A1
 
	ga1
;

516 
A2
 
	ga2
;

517 
A3
 
	ga3
;

518 
A4
 
	ga4
;

519 
A5
 
	ga5
;

520 
R
 
	gr
;

521 
	g¨gs
 >> 
	ga1
;

522 
	g¨gs
 >> 
	ga2
;

523 
	g¨gs
 >> 
	ga3
;

524 
	g¨gs
 >> 
	ga4
;

525 
	g¨gs
 >> 
	ga5
;

526 if(!
	g¨gs
.
okd⁄e
())

527  
	gΩc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
;

528 
	gb
 = (
sob
->*
mëh
)(
a1
, 
	ga2
, 
	ga3
, 
	ga4
, 
	ga5
, 
	gr
);

529 
	gªt
 << 
	gr
;

530  
	gb
;

533 
ªg1
(
¥oc
, 
√w
 
h1
(
sob
, 
mëh
));

536 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
, cœs†
	gA6
, cœs†
	gR
> 

537 
	gΩcs
::
ªg
(
¥oc
, 
S
*
sob
, (S::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
,

538 c⁄° 
A3
 
a3
, c⁄° 
A4
 
a4
,

539 c⁄° 
A5
 
a5
, c⁄° 
A6
 
a6
,

540 
R
 & 
r
))

542 ˛as†
	ch1
 : 
public
 
h™dÀr
 {

543 
¥iv©e
:

544 
S
 * 
sob
;

545 (
	gS
::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
	ga2
, c⁄° 
A3
 
	ga3
, c⁄° 
A4
 
	ga4
,

546 c⁄° 
A5
 
	ga5
, c⁄° 
A6
 
	ga6
, 
	gR
 & 
	gr
);

547 
	gpublic
:

548 
h1
(
S
 *
xsob
, (S::*
xmëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
, c⁄° 
A3
 
a3
,

549 c⁄° 
A4
 
a4
, c⁄° 
A5
 
a5
, c⁄° 
A6
 
a6
, 
R
 & 
r
))

550 : 
sob
(
xsob
), 
mëh
(
xmëh
) { }

551 
‚
(
unm¨shÆl
 &
¨gs
, 
m¨shÆl
 &
ªt
) {

552 
A1
 
	ga1
;

553 
A2
 
	ga2
;

554 
A3
 
	ga3
;

555 
A4
 
	ga4
;

556 
A5
 
	ga5
;

557 
A6
 
	ga6
;

558 
R
 
	gr
;

559 
	g¨gs
 >> 
	ga1
;

560 
	g¨gs
 >> 
	ga2
;

561 
	g¨gs
 >> 
	ga3
;

562 
	g¨gs
 >> 
	ga4
;

563 
	g¨gs
 >> 
	ga5
;

564 
	g¨gs
 >> 
	ga6
;

565 if(!
	g¨gs
.
okd⁄e
())

566  
	gΩc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
;

567 
	gb
 = (
sob
->*
mëh
)(
a1
, 
	ga2
, 
	ga3
, 
	ga4
, 
	ga5
, 
	ga6
, 
	gr
);

568 
	gªt
 << 
	gr
;

569  
	gb
;

572 
ªg1
(
¥oc
, 
√w
 
h1
(
sob
, 
mëh
));

575 
	gãm∂©e
<
˛ass
 
	gS
, cœs†
	gA1
, cœs†
	gA2
, cœs†
	gA3
, cœs†
	gA4
, cœs†
	gA5
,

576 
˛ass
 
	gA6
, cœs†
	gA7
, cœs†
	gR
> 

577 
	gΩcs
::
ªg
(
¥oc
, 
S
*
sob
, (S::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
,

578 c⁄° 
A3
 
a3
, c⁄° 
A4
 
a4
,

579 c⁄° 
A5
 
a5
, c⁄° 
A6
 
a6
,

580 c⁄° 
A7
 
a7
, 
R
 & 
r
))

582 ˛as†
	ch1
 : 
public
 
h™dÀr
 {

583 
¥iv©e
:

584 
S
 * 
sob
;

585 (
	gS
::*
mëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
	ga2
, c⁄° 
A3
 
	ga3
, c⁄° 
A4
 
	ga4
,

586 c⁄° 
A5
 
	ga5
, c⁄° 
A6
 
	ga6
, c⁄° 
A7
 
	ga7
, 
	gR
 & 
	gr
);

587 
	gpublic
:

588 
h1
(
S
 *
xsob
, (S::*
xmëh
)(c⁄° 
A1
 
a1
, c⁄° 
A2
 
a2
, c⁄° 
A3
 
a3
,

589 c⁄° 
A4
 
a4
, c⁄° 
A5
 
a5
, c⁄° 
A6
 
a6
,

590 c⁄° 
A7
 
a7
, 
R
 & 
r
))

591 : 
sob
(
xsob
), 
mëh
(
xmëh
) { }

592 
‚
(
unm¨shÆl
 &
¨gs
, 
m¨shÆl
 &
ªt
) {

593 
A1
 
	ga1
;

594 
A2
 
	ga2
;

595 
A3
 
	ga3
;

596 
A4
 
	ga4
;

597 
A5
 
	ga5
;

598 
A6
 
	ga6
;

599 
A7
 
	ga7
;

600 
R
 
	gr
;

601 
	g¨gs
 >> 
	ga1
;

602 
	g¨gs
 >> 
	ga2
;

603 
	g¨gs
 >> 
	ga3
;

604 
	g¨gs
 >> 
	ga4
;

605 
	g¨gs
 >> 
	ga5
;

606 
	g¨gs
 >> 
	ga6
;

607 
	g¨gs
 >> 
	ga7
;

608 if(!
	g¨gs
.
okd⁄e
())

609  
	gΩc_c⁄°
::
unm¨shÆ_¨gs_Áûuª
;

610 
	gb
 = (
sob
->*
mëh
)(
a1
, 
	ga2
, 
	ga3
, 
	ga4
, 
	ga5
, 
	ga6
, 
	ga7
, 
	gr
);

611 
	gªt
 << 
	gr
;

612  
	gb
;

615 
ªg1
(
¥oc
, 
√w
 
h1
(
sob
, 
mëh
));

619 
make_sockaddr
(c⁄° *
ho°™dp‹t
, 
sockaddr_ö
 *
d°
);

620 
make_sockaddr
(c⁄° *
ho°
, c⁄° *
p‹t
,

621 
sockaddr_ö
 *
d°
);

623 
cmp_time•ec
(c⁄° 
time•ec
 &
a
, c⁄° time•e¯&
b
);

624 
add_time•ec
(c⁄° 
time•ec
 &
a
, 
b
, time•e¯*
ªsu…
);

625 
diff_time•ec
(c⁄° 
time•ec
 &
a
, c⁄° time•e¯&
b
);

	@rpc/rpctest.cc

3 
	~<uni°d.h
>

4 
	~<sys/ty≥s.h
>

5 
	~"Ωc.h
"

6 
	~<¨∑/öë.h
>

7 
	~<°dio.h
>

8 
	~<°dlib.h
>

9 
	~<°rög.h
>

10 
	~<gë›t.h
>

11 
	~"j¶_log.h
"

12 
	~"gëtime.h
"

13 
	~"œng/vîify.h
"

15 
	#NUM_CL
 2

	)

17 
Ωcs
 *
	g£rvî
;

18 
Ωcc
 *
	g˛õ¡s
[
NUM_CL
];

19 
sockaddr_ö
 
	gd°
;

20 
	gp‹t
;

21 
±hªad_©å_t
 
	g©å
;

26 ˛as†
	c§v
 {

27 
	mpublic
:

28 
h™dÀ_22
(c⁄° 
°d
::
°rög
 
a
, c⁄° std::°rög 
b
, std::°rög & 
r
);

29 
h™dÀ_Á°
(c⁄° 
a
, &
r
);

30 
h™dÀ_¶ow
(c⁄° 
a
, &
r
);

31 
h™dÀ_bigªp
(c⁄° 
a
, 
°d
::
°rög
 &
r
);

42 
	g§v
::
h™dÀ_22
(c⁄° 
°d
::
°rög
 
a
, std::°rög 
b
, std::°rög &
r
)

44 
r
 = 
a
 + 
b
;

49 
	g§v
::
	$h™dÀ_Á°
(c⁄° 
a
, &
r
)

51 
r
 = 
a
 + 1;

53 
	}
}

56 
	g§v
::
	$h™dÀ_¶ow
(c⁄° 
a
, &
r
)

58 
	`u¶ìp
(
	`øndom
() % 5000);

59 
r
 = 
a
 + 2;

61 
	}
}

64 
	g§v
::
h™dÀ_bigªp
(c⁄° 
Àn
, 
°d
::
°rög
 &
r
)

66 
r
 = 
°d
::
°rög
(
Àn
, 'x');

70 
§v
 
	g£rvi˚
;

72 
	$°¨t£rvî
()

74 
£rvî
 = 
√w
 
	`Ωcs
(
p‹t
);

75 
£rvî
->
	`ªg
(22, &
£rvi˚
, &
§v
::
h™dÀ_22
);

76 
£rvî
->
	`ªg
(23, &
£rvi˚
, &
§v
::
h™dÀ_Á°
);

77 
£rvî
->
	`ªg
(24, &
£rvi˚
, &
§v
::
h™dÀ_¶ow
);

78 
£rvî
->
	`ªg
(25, &
£rvi˚
, &
§v
::
h™dÀ_bigªp
);

79 
	}
}

82 
	$ã°m¨shÆl
()

84 
m¨shÆl
 
m
;

85 
ªq_hódî
 
	`rh
(1,2,3,4,5);

86 
m
.
	`∑ck_ªq_hódî
(
rh
);

87 
	`VERIFY
(
m
.
	`size
()==
RPC_HEADER_SZ
);

88 
i
 = 12345;

89 
l
 = 1223344455L;

90 
°d
::
°rög
 
s
 = std::
	`°rög
("hallo....");

91 
m
 << 
i
;

92 
m
 << 
l
;

93 
m
 << 
s
;

95 *
b
;

96 
sz
;

97 
m
.
	`èke_buf
(&
b
,&
sz
);

98 
	`VERIFY
(
sz
 =()(
RPC_HEADER_SZ
+(
i
)+(
l
)+
s
.
	`size
()+()));

100 
unm¨shÆl
 
	`un
(
b
,
sz
);

101 
ªq_hódî
 
rh1
;

102 
un
.
	`u≈ack_ªq_hódî
(&
rh1
);

103 
	`VERIFY
(
	`memcmp
(&
rh
,&
rh1
,(rh))==0);

104 
i1
;

105 
l1
;

106 
°d
::
°rög
 
s1
;

107 
un
 >> 
i1
;

108 
un
 >> 
l1
;

109 
un
 >> 
s1
;

110 
	`VERIFY
(
un
.
	`okd⁄e
());

111 
	`VERIFY
(
i1
==
i
 && 
l1
==
l
 && 
s1
==
s
);

112 
	}
}

115 
	$˛õ¡1
(*
xx
)

119 
which_˛
 = ((Ë
xx
 ) % 
NUM_CL
;

121 
i
 = 0; i < 100; i++){

122 
¨g
 = (
	`øndom
() % 2000);

123 
°d
::
°rög
 
ªp
;

124 
ªt
 = 
˛õ¡s
[
which_˛
]->
	`ˇŒ
(25, 
¨g
, 
ªp
);

125 
	`VERIFY
(
ªt
 == 0);

126 i‡(()
ªp
.
	`size
()!=
¨g
) {

127 
	`¥ötf
("ªpsizêwr⁄g %d!=%d\n", ()
ªp
.
	`size
(), 
¨g
);

129 
	`VERIFY
(()
ªp
.
	`size
(Ë=
¨g
);

134 
i
 = 0; i < 100; i++){

135 
which
 = (
	`øndom
() % 2);

136 
¨g
 = (
	`øndom
() % 1000);

137 
ªp
;

139 
time•ec
 
°¨t
,
íd
;

140 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
°¨t
);

142 
ªt
 = 
˛õ¡s
[
which_˛
]->
	`ˇŒ
(
which
 ? 23 : 24, 
¨g
, 
ªp
);

143 
	`˛ock_gëtime
(
CLOCK_REALTIME
, &
íd
);

144 
diff
 = 
	`diff_time•ec
(
íd
, 
°¨t
);

145 i‡(
ªt
 != 0)

146 
	`¥ötf
("%d m†havêñ≠£d!!!\n", 
diff
);

147 
	`VERIFY
(
ªt
 == 0);

148 
	`VERIFY
(
ªp
 =(
which
 ? 
¨g
+1 :árg+2));

152 
	}
}

155 
	$˛õ¡2
(*
xx
)

157 
which_˛
 = ((Ë
xx
 ) % 
NUM_CL
;

159 
time_t
 
t1
;

160 
	`time
(&
t1
);

162 
	`time
(0Ë- 
t1
 < 10){

163 
¨g
 = (
	`øndom
() % 2000);

164 
°d
::
°rög
 
ªp
;

165 
ªt
 = 
˛õ¡s
[
which_˛
]->
	`ˇŒ
(25, 
¨g
, 
ªp
);

166 i‡(()
ªp
.
	`size
()!=
¨g
) {

167 
	`¥ötf
("ask for %dÑeply got %dÑet %d\n",

168 
¨g
, ()
ªp
.
	`size
(), 
ªt
);

170 
	`VERIFY
(()
ªp
.
	`size
(Ë=
¨g
);

173 
	}
}

176 
	$˛õ¡3
(*
xx
)

178 
Ωcc
 *
c
 = (Ωc¯*Ë
xx
;

180 
i
 = 0; i < 4; i++){

181 
ªp
;

182 
ªt
 = 
c
->
	`ˇŒ
(24, 
i
, 
ªp
, 
Ωcc
::
	`to
(3000));

183 
	`VERIFY
(
ªt
 =
Ωc_c⁄°
::
timeout_Áûuª
 || 
ªp
 =
i
+2);

186 
	}
}

190 
	$sim∂e_ã°s
(
Ωcc
 *
c
)

192 
	`¥ötf
("simple_tests\n");

197 
°d
::
°rög
 
ªp
;

198 
öåë
 = 
c
->
	`ˇŒ
(22, (
°d
::
°rög
)"hñlo", (°d::°rög)" goodbye", 
ªp
);

199 
	`VERIFY
(
öåë
 == 0);

200 
	`VERIFY
(
ªp
 == "hello goodbye");

201 
	`¥ötf
(" -- string concat RPC .. ok\n");

204 
öåë
 = 
c
->
	`ˇŒ
(25, 70000, 
ªp
, 
Ωcc
::
	`to
(200000));

205 
	`VERIFY
(
öåë
 == 0);

206 
	`VERIFY
(
ªp
.
	`size
() == 70000);

207 
	`¥ötf
(" -- smallÑequest, bigÑeply .. ok\n");

211 
öåë
 = 
c
->
	`ˇŒ
(22, (
°d
::
°rög
)"ju° o√", 
ªp
);

212 
	`VERIFY
(
öåë
 < 0);

213 
	`¥ötf
(" --Åoo fewárguments .. failed ok\n");

216 
öåë
 = 
c
->
	`ˇŒ
(23, 1001, 1002, 
ªp
);

217 
	`VERIFY
(
öåë
 < 0);

218 
	`¥ötf
(" --Åoo manyárguments .. failed ok\n");

221 
wr⁄gªp
;

222 
öåë
 = 
c
->
	`ˇŒ
(23, (
°d
::
°rög
)"hñlo", (°d::°rög)" goodbye", 
wr⁄gªp
);

223 
	`VERIFY
(
öåë
 < 0);

224 
	`¥ötf
(" -- wrongÑet value size .. failed ok\n");

228 
xx
 = 0;

229 
öåë
 = 
c
->
	`ˇŒ
(23, 77, 
xx
, 
Ωcc
::
	`to
(3000));

230 
	`VERIFY
(
öåë
 =0 && 
xx
 == 78);

231 
	`¥ötf
(" --Ço supriousÅimeout .. ok\n");

235 
°d
::
°rög
 
	`¨g
(1000, 'x');

236 
°d
::
°rög
 
ªp
;

237 
c
->
	`ˇŒ
(22, 
¨g
, (
°d
::
°rög
)"x", 
ªp
, 
Ωcc
::
	`to
(3000));

238 
	`VERIFY
(
ªp
.
	`size
() == 1001);

239 
	`¥ötf
(" --Ço supriousÅimeout .. ok\n");

243 
°d
::
°rög
 
	`big
(1000000, 'x');

244 
öåë
 = 
c
->
	`ˇŒ
(22, 
big
, (
°d
::
°rög
)"z", 
ªp
);

245 
	`VERIFY
(
ªp
.
	`size
() == 1000001);

246 
	`¥ötf
(" -- huge 1MÑpcÑequest .. ok\n");

249 
sockaddr_ö
 
n⁄_exi°ít
;

250 
	`mem£t
(&
n⁄_exi°ít
, 0, (non_existent));

251 
n⁄_exi°ít
.
sö_Ámûy
 = 
AF_INET
;

252 
n⁄_exi°ít
.
sö_addr
.
s_addr
 = 
	`öë_addr
("127.0.0.1");

253 
n⁄_exi°ít
.
sö_p‹t
 = 
	`ht⁄s
(7661);

254 
Ωcc
 *
c1
 = 
√w
 
	`Ωcc
(
n⁄_exi°ít
);

255 
time_t
 
t0
 = 
	`time
(0);

256 
öåë
 = 
c1
->
	`böd
(
Ωcc
::
	`to
(3000));

257 
time_t
 
t1
 = 
	`time
(0);

258 
	`VERIFY
(
öåë
 < 0 && (
t1
 - 
t0
) <= 4);

259 
	`¥ötf
(" --ÑpcÅimeout .. ok\n");

260 
	`¥ötf
("simple_tests OK\n");

261 
	}
}

264 
	$c⁄cuºít_ã°
(
¡
)

269 
ªt
;

271 
	`¥ötf
("°¨àc⁄cuºít_ã° (%dÅhªadsË...", 
¡
);

273 
±hªad_t
 
th
[
¡
];

274 
i
 = 0; i < 
¡
; i++){

275 
ªt
 = 
	`±hªad_¸óã
(&
th
[
i
], &
©å
, 
˛õ¡1
, (*Ë(
uöçå_t
)i);

276 
	`VERIFY
(
ªt
 == 0);

279 
i
 = 0; i < 
¡
; i++){

280 
	`VERIFY
(
	`±hªad_joö
(
th
[
i
], 
NULL
) == 0);

282 
	`¥ötf
(" OK\n");

283 
	}
}

286 
	$lossy_ã°
()

288 
ªt
;

290 
	`¥ötf
("startÜossy_test ...");

291 
	`VERIFY
(
	`£ãnv
("RPC_LOSSY", "5", 1) == 0);

293 i‡(
£rvî
) {

294 
dñëe
 
£rvî
;

295 
	`°¨t£rvî
();

298 
i
 = 0; i < 
NUM_CL
; i++) {

299 
dñëe
 
˛õ¡s
[
i
];

300 
˛õ¡s
[
i
] = 
√w
 
	`Ωcc
(
d°
);

301 
	`VERIFY
(
˛õ¡s
[
i
]->
	`böd
()==0);

304 
¡
 = 1;

305 
±hªad_t
 
th
[
¡
];

306 
i
 = 0; i < 
¡
; i++){

307 
ªt
 = 
	`±hªad_¸óã
(&
th
[
i
], &
©å
, 
˛õ¡2
, (*Ë(
uöçå_t
)i);

308 
	`VERIFY
(
ªt
 == 0);

310 
i
 = 0; i < 
¡
; i++){

311 
	`VERIFY
(
	`±hªad_joö
(
th
[
i
], 
NULL
) == 0);

313 
	`¥ötf
(".. OK\n");

314 
	`VERIFY
(
	`£ãnv
("RPC_LOSSY", "0", 1) == 0);

315 
	}
}

318 
	$Áûuª_ã°
()

320 
Ωcc
 *
˛õ¡1
;

321 
Ωcc
 *
˛õ¡
 = 
˛õ¡s
[0];

323 
	`¥ötf
("failure_test\n");

325 
dñëe
 
£rvî
;

327 
˛õ¡1
 = 
√w
 
	`Ωcc
(
d°
);

328 
	`VERIFY
 (
˛õ¡1
->
	`böd
(
Ωcc
::
	`to
(3000)) < 0);

329 
	`¥ötf
(" -- createÇew clientándÅryÅo bindÅo failed server .. failed ok\n");

331 
dñëe
 
˛õ¡1
;

333 
	`°¨t£rvî
();

335 
°d
::
°rög
 
ªp
;

336 
öåë
 = 
˛õ¡
->
	`ˇŒ
(22, (
°d
::
°rög
)"hñlo", (°d::°rög)" goodbye", 
ªp
);

337 
	`VERIFY
(
öåë
 =
Ωc_c⁄°
::
ﬁd§v_Áûuª
);

338 
	`¥ötf
(" -- callÑecovered server with old client .. failed ok\n");

340 
dñëe
 
˛õ¡
;

342 
˛õ¡s
[0] = 
˛õ¡
 = 
√w
 
	`Ωcc
(
d°
);

343 
	`VERIFY
 (
˛õ¡
->
	`böd
() >= 0);

344 
	`VERIFY
 (
˛õ¡
->
	`böd
() < 0);

346 
öåë
 = 
˛õ¡
->
	`ˇŒ
(22, (
°d
::
°rög
)"hñlo", (°d::°rög)" goodbye", 
ªp
);

347 
	`VERIFY
(
öåë
 == 0);

348 
	`VERIFY
(
ªp
 == "hello goodbye");

350 
	`¥ötf
(" -- deleteÉxistingÑpc client, createÑeplacementÑpc client .. ok\n");

353 
¡
 = 10;

354 
ªt
;

355 
	`¥ötf
(" -- c⁄cuºíàã° o¿√wÑp¯˛õ¡ w/ %dÅhªad†..", 
¡
);

357 
±hªad_t
 
th
[
¡
];

358 
i
 = 0; i < 
¡
; i++){

359 
ªt
 = 
	`±hªad_¸óã
(&
th
[
i
], &
©å
, 
˛õ¡3
, (*Ë
˛õ¡
);

360 
	`VERIFY
(
ªt
 == 0);

363 
i
 = 0; i < 
¡
; i++){

364 
	`VERIFY
(
	`±hªad_joö
(
th
[
i
], 
NULL
) == 0);

366 
	`¥ötf
("ok\n");

368 
dñëe
 
£rvî
;

369 
dñëe
 
˛õ¡
;

371 
	`°¨t£rvî
();

372 
˛õ¡s
[0] = 
˛õ¡
 = 
√w
 
	`Ωcc
(
d°
);

373 
	`VERIFY
 (
˛õ¡
->
	`böd
() >= 0);

374 
	`¥ötf
(" -- deleteÉxistingÑpc clientánd server, createÑeplacements.. ok\n");

376 
	`¥ötf
(" -- c⁄cuºíàã° o¿√w clõ¡ánd sîvî w/ %dÅhªad†..", 
¡
);

377 
i
 = 0; i < 
¡
; i++){

378 
ªt
 = 
	`±hªad_¸óã
(&
th
[
i
], &
©å
, 
˛õ¡3
, (*)
˛õ¡
);

379 
	`VERIFY
(
ªt
 == 0);

382 
i
 = 0; i < 
¡
; i++){

383 
	`VERIFY
(
	`±hªad_joö
(
th
[
i
], 
NULL
) == 0);

385 
	`¥ötf
("ok\n");

387 
	`¥ötf
("failure_test OK\n");

388 
	}
}

391 
	$maö
(
¨gc
, *
¨gv
[])

394 
	`£tvbuf
(
°dout
, 
NULL
, 
_IONBF
, 0);

395 
	`£tvbuf
(
°dîr
, 
NULL
, 
_IONBF
, 0);

396 
debug_Àvñ
 = 0;

398 
boﬁ
 
is˛õ¡
 = 
Ál£
;

399 
boﬁ
 
is£rvî
 = 
Ál£
;

401 
	`§™dom
(
	`gëpid
());

402 
p‹t
 = 20000 + (
	`gëpid
() % 10000);

404 
ch
 = 0;

405 (
ch
 = 
	`gë›t
(
¨gc
, 
¨gv
, "csd:p:l"))!=-1) {

406 
ch
) {

408 
is˛õ¡
 = 
åue
;

411 
is£rvî
 = 
åue
;

414 
debug_Àvñ
 = 
	`©oi
(
›èrg
);

417 
p‹t
 = 
	`©oi
(
›èrg
);

420 
	`VERIFY
(
	`£ãnv
("RPC_LOSSY", "5", 1) == 0);

426 i‡(!
is£rvî
 && !
is˛õ¡
) {

427 
is£rvî
 = 
is˛õ¡
 = 
åue
;

430 i‡(
debug_Àvñ
 > 0) {

432 
	`j¶_£t_debug
(
debug_Àvñ
);

433 
	`j¶_log
(
JSL_DBG_1
, "DEBUG LEVEL: %d\n", 
debug_Àvñ
);

436 
	`ã°m¨shÆl
();

438 
	`±hªad_©å_öô
(&
©å
);

440 
	`±hªad_©å_£t°acksize
(&
©å
, 32*1024);

442 i‡(
is£rvî
) {

443 
	`¥ötf
("°¨tög sîvî o¿p‹à%d RPC_HEADER_SZ %d\n", 
p‹t
, 
RPC_HEADER_SZ
);

444 
	`°¨t£rvî
();

447 i‡(
is˛õ¡
) {

449 
	`mem£t
(&
d°
, 0, (dst));

450 
d°
.
sö_Ámûy
 = 
AF_INET
;

451 
d°
.
sö_addr
.
s_addr
 = 
	`öë_addr
("127.0.0.1");

452 
d°
.
sö_p‹t
 = 
	`ht⁄s
(
p‹t
);

460 
i
 = 0; i < 
NUM_CL
; i++) {

461 
˛õ¡s
[
i
] = 
√w
 
	`Ωcc
(
d°
);

462 
	`VERIFY
 (
˛õ¡s
[
i
]->
	`böd
() == 0);

465 
	`sim∂e_ã°s
(
˛õ¡s
[0]);

466 
	`c⁄cuºít_ã°
(10);

467 
	`lossy_ã°
();

468 i‡(
is£rvî
) {

469 
	`Áûuª_ã°
();

472 
	`¥ötf
("rpctest OK\n");

474 
	`exô
(0);

478 
	`¶ìp
(1);

480 
	}
}

	@rpc/slock.h

1 #i‚de‡
__SCOPED_LOCK__


2 
	#__SCOPED_LOCK__


	)

4 
	~<±hªad.h
>

5 
	~"œng/vîify.h
"

6 
	sSc›edLock
 {

7 
	m¥iv©e
:

8 
±hªad_muãx_t
 *
m_
;

9 
	mpublic
:

10 
Sc›edLock
(
±hªad_muãx_t
 *
m
): 
m_
(m) {

11 
VERIFY
(
±hªad_muãx_lock
(
m_
)==0);

13 ~
Sc›edLock
() {

14 
VERIFY
(
±hªad_muãx_u∆ock
(
m_
)==0);

	@rpc/thr_pool.cc

1 
	~"¶ock.h
"

2 
	~"thr_poﬁ.h
"

3 
	~<°dlib.h
>

4 
	~<î∫o.h
>

5 
	~"œng/vîify.h
"

8 
	$do_w‹kî
(*
¨g
)

10 
ThrPoﬁ
 *
ç
 = (ThrPoﬁ *)
¨g
;

12 
ThrPoﬁ
::
job_t
 
j
;

13 i‡(!
ç
->
	`èkeJob
(&
j
))

16 ()(
j
.
f
)(j.
a
);

18 
	`±hªad_exô
(
NULL
);

19 
	}
}

23 
	gThrPoﬁ
::
	$ThrPoﬁ
(
sz
, 
boﬁ
 
blockög
)

24 : 
	`¡hªads_
(
sz
),
	`blockadd_
(
blockög
),
	$jobq_
(100*
sz
)

26 
	`±hªad_©å_öô
(&
©å_
);

27 
	`±hªad_©å_£t°acksize
(&
©å_
, 128<<10);

29 
i
 = 0; i < 
sz
; i++) {

30 
±hªad_t
 
t
;

31 
	`VERIFY
(
	`±hªad_¸óã
(&
t
, &
©å_
, 
do_w‹kî
, (*)
this
) ==0);

32 
th_
.
	`push_back
(
t
);

34 
	}
}

38 
	gThrPoﬁ
::~
	$ThrPoﬁ
()

40 
i
 = 0; i < 
¡hªads_
; i++) {

41 
job_t
 
j
;

42 
j
.
f
 = (*(*)(*))
NULL
;

43 
jobq_
.
	`íq
(
j
);

46 
i
 = 0; i < 
¡hªads_
; i++) {

47 
	`VERIFY
(
	`±hªad_joö
(
th_
[
i
], 
NULL
)==0);

50 
	`VERIFY
(
	`±hªad_©å_de°roy
(&
©å_
)==0);

51 
	}
}

53 
boﬁ


54 
	gThrPoﬁ
::
addJob
(*(*
f
)(*), *
a
)

56 
job_t
 
	gj
;

57 
	gj
.
	gf
 = 
f
;

58 
	gj
.
	ga
 = 
a
;

60  
	gjobq_
.
íq
(
j
,
blockadd_
);

63 
boﬁ


64 
	gThrPoﬁ
::
	$èkeJob
(
job_t
 *
j
)

66 
jobq_
.
	`deq
(
j
);

67  (
j
->
f
!=
NULL
);

68 
	}
}

	@rpc/thr_pool.h

1 #i‚de‡
__THR_POOL__


2 
	#__THR_POOL__


	)

4 
	~<±hªad.h
>

5 
	~<ve˘‹
>

7 
	~"fifo.h
"

9 ˛as†
	cThrPoﬁ
 {

12 
	mpublic
:

13 
	sjob_t
 {

14 *(*
f
)(*);

15 *
	ma
;

18 
ThrPoﬁ
(
sz
, 
boﬁ
 
blockög
=
åue
);

19 ~
ThrPoﬁ
();

20 
	gãm∂©e
<
˛ass
 
	gC
, cœs†
	gA
> 
boﬁ
 
addObjJob
(
C
 *
o
, (C::*
m
)(
A
), A 
a
);

21 
waôD⁄e
();

23 
boﬁ
 
èkeJob
(
job_t
 *
j
);

25 
	g¥iv©e
:

26 
±hªad_©å_t
 
©å_
;

27 
	g¡hªads_
;

28 
boﬁ
 
	gblockadd_
;

31 
	gfifo
<
	gjob_t
> 
	gjobq_
;

32 
	g°d
::
ve˘‹
<
±hªad_t
> 
th_
;

34 
boﬁ
 
addJob
(*(*
f
)(*), *
a
);

37 
	gãm∂©e
 <
˛ass
 
	gC
, cœs†
	gA
> 
boﬁ


38 
	gThrPoﬁ
::
addObjJob
(
C
 *
o
, (C::*
m
)(
A
), A 
a
)

41 ˛as†
	cobjfunc_wøµî
 {

42 
	gpublic
:

43 
C
 *
o
;

44 (
	gC
::*
m
)(
A
 
a
);

45 
A
 
	ga
;

46 *
func
(*
vvv
) {

47 
objfunc_wøµî
 *
	gx
 = (objfunc_wøµî*)
vvv
;

48 
C
 *
	go
 = 
x
->
o
;

49 (
	gC
::*
m
)(
A
 ) = 
x
->m;

50 
A
 
	ga
 = 
x
->
a
;

51 (
	go
->*
	gm
)(
	ga
);

52 
dñëe
 
	gx
;

57 
objfunc_wøµî
 *
	gx
 = 
√w
 objfunc_wrapper;

58 
	gx
->
	go
 = 
o
;

59 
	gx
->
	gm
 = 
m
;

60 
	gx
->
	ga
 = 
a
;

61  
addJob
(&
objfunc_wøµî
::
func
, (*)
x
);

	@
1
.
0
27
386
gettime.cc
gettime.h
lang/algorithm.h
lang/verify.h
lock_client.cc
lock_client.h
lock_demo.cc
lock_protocol.h
lock_server.cc
lock_server.h
lock_smain.cc
lock_tester.cc
rpc/connection.cc
rpc/connection.h
rpc/fifo.h
rpc/jsl_log.cc
rpc/jsl_log.h
rpc/marshall.h
rpc/method_thread.h
rpc/pollmgr.cc
rpc/pollmgr.h
rpc/rpc.cc
rpc/rpc.h
rpc/rpctest.cc
rpc/slock.h
rpc/thr_pool.cc
rpc/thr_pool.h
